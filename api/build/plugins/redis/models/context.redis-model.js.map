{"version":3,"sources":["../../../../server/plugins/redis/models/context.redis-model.js"],"names":["schema","sessionId","type","unique","index","defaultSort","savedSlots","actionQueue","responseQueue","creationDate","modificationDate","ContextRedisModel","BaseModel","constructor","modelName","MODEL_CONTEXT","idGenerator","definitions","findBySessionId","searchByField","field","value","module","exports"],"mappings":";;AAAA;;AACA;;;;AAEA,MAAMA,MAAM,GAAG;AACXC,EAAAA,SAAS,EAAE;AACPC,IAAAA,IAAI,EAAE,QADC;AAEPC,IAAAA,MAAM,EAAE,IAFD;AAGPC,IAAAA,KAAK,EAAE,IAHA;AAIPC,IAAAA,WAAW,EAAE;AAJN,GADA;AAOXC,EAAAA,UAAU,EAAE;AACRJ,IAAAA,IAAI,EAAE;AADE,GAPD;AAUXK,EAAAA,WAAW,EAAE;AACTL,IAAAA,IAAI,EAAE;AADG,GAVF;AAaXM,EAAAA,aAAa,EAAE;AACXN,IAAAA,IAAI,EAAE;AADK,GAbJ;AAgBXO,EAAAA,YAAY,EAAE;AACVP,IAAAA,IAAI,EAAE;AADI,GAhBH;AAmBXQ,EAAAA,gBAAgB,EAAE;AACdR,IAAAA,IAAI,EAAE;AADQ;AAnBP,CAAf;;AAwBA,MAAMS,iBAAN,SAAgCC,kBAAhC,CAA0C;AAEtCC,EAAAA,WAAW,GAAG;AAEV,UAAM;AAAEb,MAAAA;AAAF,KAAN;AACH;;AAED,aAAWc,SAAX,GAAuB;AAEnB,WAAOC,wBAAP;AACH;;AAED,aAAWC,WAAX,GAAyB;AAErB,WAAO,WAAP;AACH;;AAED,aAAWC,WAAX,GAAyB;AAErB,WAAOjB,MAAP;AACH;;AAED,QAAMkB,eAAN,CAAsB;AAAEjB,IAAAA;AAAF,GAAtB,EAAqC;AAEjC,WAAO,MAAM,KAAKkB,aAAL,CAAmB;AAAEC,MAAAA,KAAK,EAAE,WAAT;AAAsBC,MAAAA,KAAK,EAAEpB;AAA7B,KAAnB,CAAb;AACH;;AAzBqC;;AA6B1CqB,MAAM,CAACC,OAAP,GAAiBZ,iBAAjB","sourcesContent":["import { MODEL_CONTEXT } from '../../../util/constants';\nimport BaseModel from '../lib/base-model';\n\nconst schema = {\n    sessionId: {\n        type: 'string',\n        unique: true,\n        index: true,\n        defaultSort: true\n    },\n    savedSlots: {\n        type: 'json'\n    },\n    actionQueue: {\n        type: 'json'\n    },\n    responseQueue: {\n        type: 'json'\n    },\n    creationDate: {\n        type: 'timestamp'\n    },\n    modificationDate: {\n        type: 'timestamp'\n    }\n};\n\nclass ContextRedisModel extends BaseModel {\n\n    constructor() {\n\n        super({ schema });\n    }\n\n    static get modelName() {\n\n        return MODEL_CONTEXT;\n    }\n\n    static get idGenerator() {\n\n        return 'increment';\n    }\n\n    static get definitions() {\n\n        return schema;\n    }\n\n    async findBySessionId({ sessionId }) {\n\n        return await this.searchByField({ field: 'sessionId', value: sessionId });\n    }\n\n}\n\nmodule.exports = ContextRedisModel;\n"],"file":"context.redis-model.js"}