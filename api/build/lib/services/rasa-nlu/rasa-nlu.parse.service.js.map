{"version":3,"sources":["../../../../server/lib/services/rasa-nlu/rasa-nlu.parse.service.js"],"names":["module","exports","text","project","trainedCategory","baseURL","rasaNLU","server","app","result","Parse","q","model","temporalParse","category","name","entities","forEach","entity","index","keyword","keywords","justER","intent","action","saying","confidence","RASA_INTENT_RANKING","RASA_ACTION_RANKING"],"mappings":";;AAAA;;;;;;AAKAA,MAAM,CAACC,OAAP,GAAiB,gBACb;AACIC,EAAAA,IADJ;AAEIC,EAAAA,OAFJ;AAGIC,EAAAA,eAHJ;AAIIC,EAAAA,OAAO,GAAG;AAJd,CADa,EAMV;AAAA,QAEmBC,OAFnB,GAE+B,KAAKC,MAAL,CAAYC,GAF3C,CAEO,UAFP;AAIH,QAAMC,MAAM,GAAG,MAAMH,OAAO,CAACI,KAAR,CAAc;AAC/BC,IAAAA,CAAC,EAAET,IAD4B;AAE/BC,IAAAA,OAF+B;AAG/BS,IAAAA,KAAK,EAAER,eAAe,CAACQ,KAHQ;AAI/BP,IAAAA;AAJ+B,GAAd,CAArB;AAMA,SAAOI,MAAM,CAACP,IAAd;AACA,QAAMW,aAAa,GAAG;AAClBC,IAAAA,QAAQ,EAAEV,eAAe,CAACW;AADR,GAAtB;AAGAN,EAAAA,MAAM,CAACO,QAAP,CAAgBC,OAAhB,CAAwB,CAACC,MAAD,EAASC,KAAT,KAAmB;AAEvCV,IAAAA,MAAM,CAACO,QAAP,CAAgBG,KAAhB,EAAuBC,OAAvB,GAAiCF,MAAM,CAACA,MAAxC;AACA,WAAOT,MAAM,CAACO,QAAP,CAAgBG,KAAhB,EAAuBD,MAA9B;AACH,GAJD;AAKAT,EAAAA,MAAM,CAACY,QAAP,GAAkBZ,MAAM,CAACO,QAAzB;AACA,SAAOP,MAAM,CAACO,QAAd;;AACA,MAAIZ,eAAe,CAACkB,MAApB,EAA4B;AACxB,WAAOb,MAAM,CAACc,MAAd;AACAd,IAAAA,MAAM,CAACe,MAAP,GAAgB;AACZT,MAAAA,IAAI,EAAEX,eAAe,CAACqB,MADV;AAEZC,MAAAA,UAAU,EAAE;AAFA,KAAhB;AAIH,GAND,MAOK;AACDjB,IAAAA,MAAM,CAACe,MAAP,GAAgBf,MAAM,CAACc,MAAP,CAAcR,IAAd,GAAqBN,MAAM,CAACc,MAA5B,GAAqC;AACjDR,MAAAA,IAAI,EAAE,EAD2C;AAEjDW,MAAAA,UAAU,EAAEjB,MAAM,CAACc,MAAP,CAAcG;AAFuB,KAArD;AAIA,WAAOjB,MAAM,CAACc,MAAd;AACH;;AACD,MAAId,MAAM,CAACkB,8BAAD,CAAV,EAAiC;AAC7BlB,IAAAA,MAAM,CAACmB,8BAAD,CAAN,GAA8BnB,MAAM,CAACkB,8BAAD,CAApC;AACA,WAAOlB,MAAM,CAACkB,8BAAD,CAAb;AACH;;AAED,2BAAYd,aAAZ,EAA8BJ,MAA9B;AACH,CA/CD","sourcesContent":["import {\n    RASA_ACTION_RANKING,\n    RASA_INTENT_RANKING\n} from '../../../util/constants';\n\nmodule.exports = async function (\n    {\n        text,\n        project,\n        trainedCategory,\n        baseURL = null\n    }) {\n\n    const { [`rasa-nlu`]: rasaNLU } = this.server.app;\n\n    const result = await rasaNLU.Parse({\n        q: text,\n        project,\n        model: trainedCategory.model,\n        baseURL\n    });\n    delete result.text;\n    const temporalParse = {\n        category: trainedCategory.name\n    };\n    result.entities.forEach((entity, index) => {\n\n        result.entities[index].keyword = entity.entity;\n        delete result.entities[index].entity;\n    });\n    result.keywords = result.entities;\n    delete result.entities;\n    if (trainedCategory.justER) {\n        delete result.intent;\n        result.action = {\n            name: trainedCategory.saying,\n            confidence: 1\n        };\n    }\n    else {\n        result.action = result.intent.name ? result.intent : {\n            name: '',\n            confidence: result.intent.confidence\n        };\n        delete result.intent;\n    }\n    if (result[RASA_INTENT_RANKING]) {\n        result[RASA_ACTION_RANKING] = result[RASA_INTENT_RANKING];\n        delete result[RASA_INTENT_RANKING];\n    }\n\n    return { ...temporalParse, ...result };\n};\n"],"file":"rasa-nlu.parse.service.js"}