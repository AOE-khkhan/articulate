{"version":3,"sources":["../../../server/lib/services/context.services.js"],"names":["module","exports","ContextService","Schmervice","Service","create","fn","Create","name","apply","arguments","createFrame","CreateFrame","updateFrameBySessionAndFrame","UpdateFrameBySessionIdAndFrameId","update","Update","findBySession","FindBySession","findFramesBySession","FindFramesBySession","findFrameBySessionAndFrame","FindFrameBySessionIdAndFrameId","removeBySession","RemoveBySession","removeFramesBySessionId","RemoveFramesBySessionId","removeFramesBySessionIdAndFrameId","RemoveFramesBySessionIdAndFrameId"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,MAAMC,cAAN,SAA6BC,oBAAWC,OAAxC,CAAgD;AAE7D,QAAMC,MAAN,GAAe;AAEX,WAAO,MAAM,mCAAc;AAAEC,MAAAA,EAAE,EAAEC,sBAAN;AAAcC,MAAAA,IAAI,EAAE;AAApB,KAAd,EAA6DC,KAA7D,CAAmE,IAAnE,EAAyEC,SAAzE,CAAb;AACH;;AAED,QAAMC,WAAN,GAAoB;AAEhB,WAAO,MAAMC,4BAAYH,KAAZ,CAAkB,IAAlB,EAAwBC,SAAxB,CAAb;AACH;;AAED,QAAMG,4BAAN,GAAqC;AAEjC,WAAO,MAAMC,6CAAiCL,KAAjC,CAAuC,IAAvC,EAA6CC,SAA7C,CAAb;AACH;;AAED,QAAMK,MAAN,GAAe;AAEX,WAAO,MAAM,mCAAc;AAAET,MAAAA,EAAE,EAAEU,sBAAN;AAAcR,MAAAA,IAAI,EAAE;AAApB,KAAd,EAA6DC,KAA7D,CAAmE,IAAnE,EAAyEC,SAAzE,CAAb;AACH;;AAED,QAAMO,aAAN,GAAsB;AAElB,WAAO,MAAM,mCAAc;AAAEX,MAAAA,EAAE,EAAEY,6BAAN;AAAqBV,MAAAA,IAAI,EAAE;AAA3B,KAAd,EAA2EC,KAA3E,CAAiF,IAAjF,EAAuFC,SAAvF,CAAb;AACH;;AAED,QAAMS,mBAAN,GAA4B;AAExB,WAAO,MAAMC,oCAAoBX,KAApB,CAA0B,IAA1B,EAAgCC,SAAhC,CAAb;AACH;;AAED,QAAMW,0BAAN,GAAmC;AAE/B,WAAO,MAAMC,2CAA+Bb,KAA/B,CAAqC,IAArC,EAA2CC,SAA3C,CAAb;AACH;;AAED,QAAMC,WAAN,GAAoB;AAEhB,WAAO,MAAMC,4BAAYH,KAAZ,CAAkB,IAAlB,EAAwBC,SAAxB,CAAb;AACH;;AAED,QAAMa,eAAN,GAAwB;AAEpB,WAAO,MAAMC,gCAAgBf,KAAhB,CAAsB,IAAtB,EAA4BC,SAA5B,CAAb;AACH;;AAED,QAAMe,uBAAN,GAAgC;AAE5B,WAAO,MAAMC,sCAAwBjB,KAAxB,CAA8B,IAA9B,EAAoCC,SAApC,CAAb;AACH;;AAED,QAAMiB,iCAAN,GAA0C;AAEtC,WAAO,MAAMC,8CAAkCnB,KAAlC,CAAwC,IAAxC,EAA8CC,SAA9C,CAAb;AACH;;AAvD4D,CAAjE","sourcesContent":["import Schmervice from 'schmervice';\nimport TimingWrapper from '../../util/service-timing-wrapper';\nimport CreateFrame from './context/context.create-frame.service';\nimport Create from './context/context.create.service';\nimport FindBySession from './context/context.find-by-session.service';\nimport FindFrameBySessionIdAndFrameId from './context/context.find-frame-by-session-and-frame.service';\nimport FindFramesBySession from './context/context.find-frames-by-session.service';\nimport RemoveBySession from './context/context.remove-by-session.service';\nimport RemoveFramesBySessionIdAndFrameId from './context/context.remove-frames-by-session-and-frame.service';\nimport RemoveFramesBySessionId from './context/context.remove-frames-by-session.service';\nimport UpdateFrameBySessionIdAndFrameId from './context/context.update-frame-by-session-and-frame.service';\nimport Update from './context/context.update.service';\n\nmodule.exports = class ContextService extends Schmervice.Service {\n\n    async create() {\n\n        return await TimingWrapper({ fn: Create, name: 'ContextService.create' }).apply(this, arguments);\n    }\n\n    async createFrame() {\n\n        return await CreateFrame.apply(this, arguments);\n    }\n\n    async updateFrameBySessionAndFrame() {\n\n        return await UpdateFrameBySessionIdAndFrameId.apply(this, arguments);\n    }\n\n    async update() {\n\n        return await TimingWrapper({ fn: Update, name: 'ContextService.update' }).apply(this, arguments);\n    }\n\n    async findBySession() {\n\n        return await TimingWrapper({ fn: FindBySession, name: 'ContextService.findBySession' }).apply(this, arguments);\n    }\n\n    async findFramesBySession() {\n\n        return await FindFramesBySession.apply(this, arguments);\n    }\n\n    async findFrameBySessionAndFrame() {\n\n        return await FindFrameBySessionIdAndFrameId.apply(this, arguments);\n    }\n\n    async createFrame() {\n\n        return await CreateFrame.apply(this, arguments);\n    }\n\n    async removeBySession() {\n\n        return await RemoveBySession.apply(this, arguments);\n    }\n\n    async removeFramesBySessionId() {\n\n        return await RemoveFramesBySessionId.apply(this, arguments);\n    }\n\n    async removeFramesBySessionIdAndFrameId() {\n\n        return await RemoveFramesBySessionIdAndFrameId.apply(this, arguments);\n    }\n};\n\n\n"],"file":"context.services.js"}