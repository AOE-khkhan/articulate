{"version":3,"sources":["../../../../server/lib/services/agent/agent.parse-rasa-keywords.service.js"],"names":["module","exports","AgentModel","text","trainedCategories","rasaURL","server","services","rasaNLUService","agent","allProperties","categoryRecognizerTrainedCategory","_","filter","trainedCategory","model","indexOf","RASA_MODEL_CATEGORY_RECOGNIZER","length","categoryRecognitionResults","parse","project","agentName","baseURL","rasaResults","Promise","all","map","name","category","startTime","Moment","categoryRasaResults","endTime","duration","diff","asMilliseconds","elapsed_time_ms","categoryScore","RASA_ACTION_RANKING","recognizedCategory","confidence"],"mappings":";;AAAA;;AACA;;AACA;;;;;;;;AAKAA,MAAM,CAACC,OAAP,GAAiB,gBACb;AACIC,EAAAA,UADJ;AAEIC,EAAAA,IAFJ;AAGIC,EAAAA,iBAHJ;AAIIC,EAAAA,OAAO,GAAG;AAJd,CADa,EAMV;AAAA,eAEwB,MAAM,KAAKC,MAAL,CAAYC,QAAZ,EAF9B;AAAA,QAEKC,cAFL,QAEKA,cAFL;;AAGH,QAAMC,KAAK,GAAGP,UAAU,CAACQ,aAAX,EAAd;;AAEA,MAAIC,iCAAiC,GAAGC,gBAAEC,MAAF,CAAST,iBAAT,EAA6BU,eAAD,IAAqB;AAErF,WAAOA,eAAe,CAACC,KAAhB,CAAsBC,OAAtB,CAA8BC,yCAA9B,IAAgE,CAAC,CAAxE;AACH,GAHuC,CAAxC;;AAKAN,EAAAA,iCAAiC,GAAGA,iCAAiC,CAACO,MAAlC,GAA2C,CAA3C,GAA+CP,iCAAiC,CAAC,CAAD,CAAhF,GAAsF,IAA1H;AACA,MAAIQ,0BAAJ;;AACA,MAAIR,iCAAJ,EAAuC;AAEnCQ,IAAAA,0BAA0B,GAAG,MAAMX,cAAc,CAACY,KAAf,CAAqB;AACpDjB,MAAAA,IADoD;AAEpDkB,MAAAA,OAAO,EAAEZ,KAAK,CAACa,SAFqC;AAGpDR,MAAAA,eAAe,EAAEH,iCAHmC;AAIpDY,MAAAA,OAAO,EAAElB;AAJ2C,KAArB,CAAnC;AAMH;;AAED,QAAMmB,WAAW,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAYtB,iBAAiB,CAACuB,GAAlB,CAAsB,MAAOb,eAAP,IAA2B;AAEnF,QAAI,CAACK,0BAAD,IAA+BL,eAAe,CAACc,IAAhB,KAAyBT,0BAA0B,CAACU,QAAvF,EAAiG;AAE7F,YAAMC,SAAS,GAAG,IAAIC,eAAJ,EAAlB;AACA,UAAIC,mBAAmB,GAAG,MAAMxB,cAAc,CAACY,KAAf,CAAqB;AACjDjB,QAAAA,IADiD;AAEjDkB,QAAAA,OAAO,EAAEZ,KAAK,CAACa,SAFkC;AAGjDR,QAAAA,eAHiD;AAIjDS,QAAAA,OAAO,EAAElB;AAJwC,OAArB,CAAhC;AAMA,YAAM4B,OAAO,GAAG,IAAIF,eAAJ,EAAhB;;AACA,YAAMG,QAAQ,GAAGH,gBAAOG,QAAP,CAAgBD,OAAO,CAACE,IAAR,CAAaL,SAAb,CAAhB,EAAyC,IAAzC,EAA+CM,cAA/C,EAAjB;;AACAJ,MAAAA,mBAAmB,qBAAQA,mBAAR,EAAgC;AAAEK,QAAAA,eAAe,EAAEH;AAAnB,OAAhC,CAAnB;;AACA,UAAIf,0BAAJ,EAAgC;AAC5B,YAAImB,aAAa,GAAG1B,gBAAEC,MAAF,CAASM,0BAA0B,CAACoB,8BAAD,CAAnC,EAA2DC,kBAAD,IAAwB;AAElG,iBAAOA,kBAAkB,CAACZ,IAAnB,KAA4BI,mBAAmB,CAACH,QAAvD;AACH,SAHmB,CAApB;;AAIAS,QAAAA,aAAa,GAAGA,aAAa,CAACpB,MAAd,GAAuB,CAAvB,GAA2BoB,aAAa,CAAC,CAAD,CAAb,CAAiBG,UAA5C,GAAyD,CAAzE;AACAT,QAAAA,mBAAmB,qBAAQA,mBAAR,EAAiC;AAAEM,UAAAA;AAAF,SAAjC,CAAnB;AACH,OAPD,MAQK;AACDN,QAAAA,mBAAmB,qBAAQA,mBAAR,EAAiC;AAAEM,UAAAA,aAAa,EAAE;AAAjB,SAAjC,CAAnB;AACH;;AACD,aAAON,mBAAP;AACH;AACJ,GA3BqC,CAAZ,CAA1B;AA6BA,SAAOR,WAAP;AACH,CA1DD","sourcesContent":["import _ from 'lodash';\nimport Moment from 'moment';\nimport {\n    RASA_ACTION_RANKING,\n    RASA_MODEL_CATEGORY_RECOGNIZER\n} from '../../../util/constants';\n\nmodule.exports = async function (\n    {\n        AgentModel,\n        text,\n        trainedCategories,\n        rasaURL = null\n    }) {\n\n    const { rasaNLUService } = await this.server.services();\n    const agent = AgentModel.allProperties();\n\n    let categoryRecognizerTrainedCategory = _.filter(trainedCategories, (trainedCategory) => {\n\n        return trainedCategory.model.indexOf(RASA_MODEL_CATEGORY_RECOGNIZER) > -1;\n    });\n\n    categoryRecognizerTrainedCategory = categoryRecognizerTrainedCategory.length > 0 ? categoryRecognizerTrainedCategory[0] : null;\n    let categoryRecognitionResults;\n    if (categoryRecognizerTrainedCategory) {\n\n        categoryRecognitionResults = await rasaNLUService.parse({\n            text,\n            project: agent.agentName,\n            trainedCategory: categoryRecognizerTrainedCategory,\n            baseURL: rasaURL\n        });\n    }\n\n    const rasaResults = await Promise.all(trainedCategories.map(async (trainedCategory) => {\n\n        if (!categoryRecognitionResults || trainedCategory.name !== categoryRecognitionResults.category) {\n\n            const startTime = new Moment();\n            let categoryRasaResults = await rasaNLUService.parse({\n                text,\n                project: agent.agentName,\n                trainedCategory,\n                baseURL: rasaURL\n            });\n            const endTime = new Moment();\n            const duration = Moment.duration(endTime.diff(startTime), 'ms').asMilliseconds();\n            categoryRasaResults = { ...categoryRasaResults, ...{ elapsed_time_ms: duration } };\n            if (categoryRecognitionResults) {\n                let categoryScore = _.filter(categoryRecognitionResults[RASA_ACTION_RANKING], (recognizedCategory) => {\n\n                    return recognizedCategory.name === categoryRasaResults.category;\n                });\n                categoryScore = categoryScore.length > 0 ? categoryScore[0].confidence : 0;\n                categoryRasaResults = { ...categoryRasaResults, ... { categoryScore } };\n            }\n            else {\n                categoryRasaResults = { ...categoryRasaResults, ... { categoryScore: 1 } };\n            }\n            return categoryRasaResults;\n        }\n    }));\n\n    return rasaResults;\n};\n"],"file":"agent.parse-rasa-keywords.service.js"}