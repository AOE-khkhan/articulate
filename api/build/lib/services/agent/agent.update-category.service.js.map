{"version":3,"sources":["../../../../server/lib/services/agent/agent.update-category.service.js"],"names":["module","exports","id","categoryId","categoryData","returnModel","server","services","globalService","modelPath","MODEL_AGENT","MODEL_CATEGORY","modelPathIds","models","getAllModelsInPath","ids","AgentModel","CategoryModel","categoryName","undefined","property","actionThreshold","status","STATUS_OUT_OF_DATE","saveInstance","updateInstance","data","allProperties","error"],"mappings":";;AAAA;;AAKA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,gBAAgB;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,UAAN;AAAkBC,EAAAA,YAAlB;AAAgCC,EAAAA,WAAW,GAAG;AAA9C,CAAhB,EAAuE;AAAA,eAE1D,MAAM,KAAKC,MAAL,CAAYC,QAAZ,EAFoD;AAAA,QAE5EC,aAF4E,QAE5EA,aAF4E;;AAIpF,MAAI;AACA,UAAMC,SAAS,GAAG,CAACC,sBAAD,EAAcC,yBAAd,CAAlB;AACA,UAAMC,YAAY,GAAG,CAACV,EAAD,EAAKC,UAAL,CAArB,CAFA,CAIA;;AACA,UAAMU,MAAM,GAAG,MAAML,aAAa,CAACM,kBAAd,CAAiC;AAAEL,MAAAA,SAAF;AAAaM,MAAAA,GAAG,EAAEH,YAAlB;AAAgCP,MAAAA,WAAW,EAAE;AAA7C,KAAjC,CAArB;AACA,UAAMW,UAAU,GAAGH,MAAM,CAACH,sBAAD,CAAzB;AACA,UAAMO,aAAa,GAAGJ,MAAM,CAACF,yBAAD,CAA5B;;AACA,QAAKP,YAAY,CAACc,YAAb,KAA8BC,SAA9B,IAA2CF,aAAa,CAACG,QAAd,CAAuB,cAAvB,MAA2ChB,YAAY,CAACc,YAApG,IACCd,YAAY,CAACiB,eAAb,KAAiCF,SAAjC,IAA8CF,aAAa,CAACG,QAAd,CAAuB,iBAAvB,MAA8ChB,YAAY,CAACiB,eAD9G,EAC+H;AAC3HjB,MAAAA,YAAY,CAACkB,MAAb,GAAsBC,6BAAtB;AACAP,MAAAA,UAAU,CAACI,QAAX,CAAoB,QAApB,EAA8BG,6BAA9B;AACH;;AACD,UAAMP,UAAU,CAACQ,YAAX,EAAN;AACA,UAAMP,aAAa,CAACQ,cAAd,CAA6B;AAAEC,MAAAA,IAAI,EAAEtB;AAAR,KAA7B,CAAN;AACA,WAAOC,WAAW,GAAGY,aAAH,GAAmBA,aAAa,CAACU,aAAd,EAArC;AACH,GAhBD,CAiBA,OAAOC,KAAP,EAAc;AACV,UAAM,oBAAkB;AAAEA,MAAAA;AAAF,KAAlB,CAAN;AACH;AACJ,CAxBD","sourcesContent":["import {\n    MODEL_AGENT,\n    MODEL_CATEGORY,\n    STATUS_OUT_OF_DATE\n} from '../../../util/constants';\nimport RedisErrorHandler from '../../errors/redis.error-handler';\n\nmodule.exports = async function ({ id, categoryId, categoryData, returnModel = false }) {\n\n    const { globalService } = await this.server.services();\n\n    try {\n        const modelPath = [MODEL_AGENT, MODEL_CATEGORY];\n        const modelPathIds = [id, categoryId];\n\n        // Load Used Models\n        const models = await globalService.getAllModelsInPath({ modelPath, ids: modelPathIds, returnModel: true });\n        const AgentModel = models[MODEL_AGENT];\n        const CategoryModel = models[MODEL_CATEGORY];\n        if ((categoryData.categoryName !== undefined && CategoryModel.property('categoryName') !== categoryData.categoryName) &&\n            (categoryData.actionThreshold !== undefined && CategoryModel.property('actionThreshold') !== categoryData.actionThreshold)){\n            categoryData.status = STATUS_OUT_OF_DATE;\n            AgentModel.property('status', STATUS_OUT_OF_DATE);\n        }\n        await AgentModel.saveInstance();\n        await CategoryModel.updateInstance({ data: categoryData });\n        return returnModel ? CategoryModel : CategoryModel.allProperties();\n    }\n    catch (error) {\n        throw RedisErrorHandler({ error });\n    }\n};\n"],"file":"agent.update-category.service.js"}