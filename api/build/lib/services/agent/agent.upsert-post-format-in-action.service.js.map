{"version":3,"sources":["../../../../server/lib/services/agent/agent.upsert-post-format-in-action.service.js"],"names":["module","exports","id","actionId","postFormatData","returnModel","server","services","globalService","postFormatService","modelPath","model","MODEL_AGENT","MODEL_ACTION","actionModel","findInModelPath","data","children","getAll","MODEL_POST_FORMAT","length","updateById","create","parent","error"],"mappings":";;AAAA;;AAKA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,gBAAgB;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,QAAN;AAAgBC,EAAAA,cAAhB;AAAgCC,EAAAA,WAAW,GAAG;AAA9C,CAAhB,EAAuE;AAAA,eAEvC,MAAM,KAAKC,MAAL,CAAYC,QAAZ,EAFiC;AAAA,QAE5EC,aAF4E,QAE5EA,aAF4E;AAAA,QAE7DC,iBAF6D,QAE7DA,iBAF6D;;AAIpF,MAAI;AACA,UAAMC,SAAS,GAAG,CACd;AAAEC,MAAAA,KAAK,EAAEC,sBAAT;AAAsBV,MAAAA;AAAtB,KADc,EAEd;AAAES,MAAAA,KAAK,EAAEE,uBAAT;AAAuBX,MAAAA,EAAE,EAAEC;AAA3B,KAFc,CAAlB;AAIA,QAAIW,WAAW,GAAG,MAAMN,aAAa,CAACO,eAAd,CAA8B;AAAEL,MAAAA,SAAF;AAAaL,MAAAA,WAAW,EAAE;AAA1B,KAA9B,CAAxB;AACAS,IAAAA,WAAW,GAAGA,WAAW,CAACE,IAA1B;AACA,UAAMC,QAAQ,GAAG,MAAMH,WAAW,CAACI,MAAZ,CAAmBC,4BAAnB,EAAsCA,4BAAtC,CAAvB;;AACA,QAAIF,QAAQ,CAACG,MAAT,GAAkB,CAAtB,EAAyB;AAAE;AACvB,aAAO,MAAMX,iBAAiB,CAACY,UAAlB,CAA6B;AACtCnB,QAAAA,EAAE,EAAEe,QAAQ,CAAC,CAAD,CAD0B;AAEtCD,QAAAA,IAAI,EAAEZ,cAFgC;AAGtCC,QAAAA;AAHsC,OAA7B,CAAb;AAMH,KAfD,CAeE;;;AAEF,WAAO,MAAMI,iBAAiB,CAACa,MAAlB,CAAyB;AAClCN,MAAAA,IAAI,EAAEZ,cAD4B;AAElCmB,MAAAA,MAAM,EAAET,WAF0B;AAGlCT,MAAAA;AAHkC,KAAzB,CAAb;AAKH,GAtBD,CAuBA,OAAOmB,KAAP,EAAc;AACV,UAAM,oBAAkB;AAAEA,MAAAA;AAAF,KAAlB,CAAN;AACH;AACJ,CA9BD","sourcesContent":["import {\n    MODEL_ACTION,\n    MODEL_AGENT,\n    MODEL_POST_FORMAT\n} from '../../../util/constants';\nimport RedisErrorHandler from '../../errors/redis.error-handler';\n\nmodule.exports = async function ({ id, actionId, postFormatData, returnModel = false }) {\n\n    const { globalService, postFormatService } = await this.server.services();\n\n    try {\n        const modelPath = [\n            { model: MODEL_AGENT, id },\n            { model: MODEL_ACTION, id: actionId }\n        ];\n        let actionModel = await globalService.findInModelPath({ modelPath, returnModel: true });\n        actionModel = actionModel.data;\n        const children = await actionModel.getAll(MODEL_POST_FORMAT, MODEL_POST_FORMAT);\n        if (children.length > 0) { // Update\n            return await postFormatService.updateById({\n                id: children[0],\n                data: postFormatData,\n                returnModel\n            });\n\n        } // Create\n\n        return await postFormatService.create({\n            data: postFormatData,\n            parent: actionModel,\n            returnModel\n        });\n    }\n    catch (error) {\n        throw RedisErrorHandler({ error });\n    }\n};\n"],"file":"agent.upsert-post-format-in-action.service.js"}