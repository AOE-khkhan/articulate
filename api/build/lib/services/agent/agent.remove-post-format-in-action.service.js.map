{"version":3,"sources":["../../../../server/lib/services/agent/agent.remove-post-format-in-action.service.js"],"names":["module","exports","id","actionId","server","services","globalService","postFormatService","modelPath","model","MODEL_AGENT","MODEL_ACTION","actionModel","findInModelPath","returnModel","data","children","getAll","MODEL_POST_FORMAT","length","remove","Promise","reject","error"],"mappings":";;AAAA;;AAKA;;AACA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,gBAAgB;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAAhB,EAAkC;AAAA,eAEF,MAAM,KAAKC,MAAL,CAAYC,QAAZ,EAFJ;AAAA,QAEvCC,aAFuC,QAEvCA,aAFuC;AAAA,QAExBC,iBAFwB,QAExBA,iBAFwB;;AAI/C,MAAI;AACA,UAAMC,SAAS,GAAG,CACd;AAAEC,MAAAA,KAAK,EAAEC,sBAAT;AAAsBR,MAAAA;AAAtB,KADc,EAEd;AAAEO,MAAAA,KAAK,EAAEE,uBAAT;AAAuBT,MAAAA,EAAE,EAAEC;AAA3B,KAFc,CAAlB;AAIA,QAAIS,WAAW,GAAG,MAAMN,aAAa,CAACO,eAAd,CAA8B;AAAEL,MAAAA,SAAF;AAAaM,MAAAA,WAAW,EAAE;AAA1B,KAA9B,CAAxB;AACAF,IAAAA,WAAW,GAAGA,WAAW,CAACG,IAA1B;AACA,UAAMC,QAAQ,GAAG,MAAMJ,WAAW,CAACK,MAAZ,CAAmBC,4BAAnB,EAAsCA,4BAAtC,CAAvB;;AACA,QAAIF,QAAQ,CAACG,MAAT,GAAkB,CAAtB,EAAyB;AACrB,aAAO,MAAMZ,iBAAiB,CAACa,MAAlB,CAAyB;AAClClB,QAAAA,EAAE,EAAEc,QAAQ,CAAC,CAAD;AADsB,OAAzB,CAAb;AAGH;;AAED,WAAOK,OAAO,CAACC,MAAR,CAAe,qBAAe;AAAEb,MAAAA,KAAK,EAAES;AAAT,KAAf,CAAf,CAAP;AACH,GAfD,CAgBA,OAAOK,KAAP,EAAc;AACV,UAAM,oBAAkB;AAAEA,MAAAA;AAAF,KAAlB,CAAN;AACH;AACJ,CAvBD","sourcesContent":["import {\n    MODEL_ACTION,\n    MODEL_AGENT,\n    MODEL_POST_FORMAT\n} from '../../../util/constants';\nimport GlobalNotFound from '../../errors/global.not-found-error';\nimport RedisErrorHandler from '../../errors/redis.error-handler';\n\nmodule.exports = async function ({ id, actionId }) {\n\n    const { globalService, postFormatService } = await this.server.services();\n\n    try {\n        const modelPath = [\n            { model: MODEL_AGENT, id },\n            { model: MODEL_ACTION, id: actionId }\n        ];\n        let actionModel = await globalService.findInModelPath({ modelPath, returnModel: true });\n        actionModel = actionModel.data;\n        const children = await actionModel.getAll(MODEL_POST_FORMAT, MODEL_POST_FORMAT);\n        if (children.length > 0) {\n            return await postFormatService.remove({\n                id: children[0]\n            });\n        }\n\n        return Promise.reject(GlobalNotFound({ model: MODEL_POST_FORMAT }));\n    }\n    catch (error) {\n        throw RedisErrorHandler({ error });\n    }\n};\n"],"file":"agent.remove-post-format-in-action.service.js"}