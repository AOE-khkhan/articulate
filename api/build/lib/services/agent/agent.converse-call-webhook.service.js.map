{"version":3,"sources":["../../../../server/lib/services/agent/agent.converse-call-webhook.service.js"],"names":["getHeaders","headers","contentType","result","userSpecifiedContentType","forEach","header","key","value","toUpperCase","module","exports","url","templatePayload","payloadType","method","templateContext","username","password","handlebars","server","app","compiledUrl","compile","compiledPayload","data","QueryString","stringify","JSON","parse","startTime","Moment","response","responseType","auth","undefined","endTime","elapsed_time_ms","duration","diff","asMilliseconds","text","error","textResponse","actions"],"mappings":"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","sourcesContent":["import Axios from 'axios';\nimport QueryString from 'querystring';\nimport Moment from 'moment';\n\nconst getHeaders = (headers, contentType) => {\n\n    const result = {};\n    let userSpecifiedContentType = false;\n    headers.forEach((header) => {\n\n        result[header.key] = header.value;\n        if (header.key.toUpperCase() === 'Content-Type'.toUpperCase()){\n            userSpecifiedContentType = true;\n        }\n    });\n    if (!userSpecifiedContentType && contentType){\n        result['Content-Type'] = contentType;\n    }\n    return result;\n};\n\nmodule.exports = async function ({ url, templatePayload, payloadType, method, templateContext, headers, username, password }) {\n\n    const { handlebars } = this.server.app;\n\n    try {\n        const compiledUrl = handlebars.compile(url)(templateContext);\n        let compiledPayload;\n        let data = '';\n        let contentType = '';\n\n        if (payloadType !== 'None' && payloadType !== '') {\n            compiledPayload = handlebars.compile(templatePayload)(templateContext);\n        }\n\n        if (compiledPayload) {\n            if (payloadType === 'URL Encoded') {\n                data = QueryString.stringify(JSON.parse(templatePayload));\n                contentType = 'application/x-www-form-urlencoded';\n            }\n            else if (payloadType === 'JSON') {\n                data = JSON.parse(compiledPayload);\n                contentType = 'application/json';\n            }\n            else {\n                data = compiledPayload;\n                contentType = 'text/xml';\n            }\n        }\n        const startTime = new Moment();\n        const response = await Axios({\n            method,\n            url: compiledUrl,\n            data,\n            headers: getHeaders(headers, contentType),\n            responseType: payloadType === 'XML' ? 'text' : 'json',\n            auth: username ? {\n                username,\n                password\n            } : undefined\n        });\n        const endTime = new Moment();\n        const elapsed_time_ms = Moment.duration(endTime.diff(startTime), 'ms').asMilliseconds();\n        if (typeof response.data === 'string'){\n            return {\n                text: response.data,\n                elapsed_time_ms\n            }\n        }\n        return {\n            ...response.data,\n            elapsed_time_ms\n        };\n    }\n    catch (error) {\n        return { textResponse: 'We\\'re having trouble fulfilling that request', actions: [] };\n    }\n};\n"],"file":"agent.converse-call-webhook.service.js"}