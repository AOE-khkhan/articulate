{"version":3,"sources":["../../../../server/lib/services/agent/agent.find-setting-by-name.service.js"],"names":["module","exports","id","name","server","services","globalService","agent","findById","model","MODEL_AGENT","settings","error"],"mappings":";;AAAA;;AACA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,gBAAgB;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAAhB,EAA8B;AAAA,eAEjB,MAAM,KAAKC,MAAL,CAAYC,QAAZ,EAFW;AAAA,QAEnCC,aAFmC,QAEnCA,aAFmC;;AAG3C,MAAI;AAEA,UAAMC,KAAK,GAAG,MAAMD,aAAa,CAACE,QAAd,CAAuB;AAAEN,MAAAA,EAAF;AAAMO,MAAAA,KAAK,EAAEC;AAAb,KAAvB,CAApB;AACA,WAAO,MAAMH,KAAK,CAACI,QAAN,CAAeR,IAAf,CAAb;AACH,GAJD,CAKA,OAAOS,KAAP,EAAc;AACV,UAAM,oBAAkB;AAAEA,MAAAA;AAAF,KAAlB,CAAN;AACH;AACJ,CAXD","sourcesContent":["import { MODEL_AGENT } from '../../../util/constants';\nimport RedisErrorHandler from '../../errors/redis.error-handler';\n\nmodule.exports = async function ({ id, name }) {\n\n    const { globalService } = await this.server.services();\n    try {\n\n        const agent = await globalService.findById({ id, model: MODEL_AGENT });\n        return await agent.settings[name];\n    }\n    catch (error) {\n        throw RedisErrorHandler({ error });\n    }\n};\n"],"file":"agent.find-setting-by-name.service.js"}