{"version":3,"sources":["../../../../server/lib/services/agent/agent.create-category.service.js"],"names":["module","exports","id","categoryData","AgentModel","returnModel","server","services","globalService","categoryService","agentService","findById","model","MODEL_AGENT","isValid","isModelUnique","MODEL_CATEGORY","field","value","categoryName","create","data","agent","Promise","reject","message","error"],"mappings":";;AAAA;;AAIA;;AACA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,gBACb;AACIC,EAAAA,EADJ;AAEIC,EAAAA,YAFJ;AAGIC,EAAAA,UAAU,GAAG,IAHjB;AAIIC,EAAAA,WAAW,GAAG;AAJlB,CADa,EAOf;AAAA,eAE2D,MAAM,KAAKC,MAAL,CAAYC,QAAZ,EAFjE;AAAA,QAEUC,aAFV,QAEUA,aAFV;AAAA,QAEyBC,eAFzB,QAEyBA,eAFzB;AAAA,QAE0CC,YAF1C,QAE0CA,YAF1C;;AAIE,MAAI;AACAN,IAAAA,UAAU,GAAGA,UAAU,KAAI,MAAMI,aAAa,CAACG,QAAd,CAAuB;AAAET,MAAAA,EAAF;AAAMU,MAAAA,KAAK,EAAEC,sBAAb;AAA0BR,MAAAA,WAAW,EAAE;AAAvC,KAAvB,CAAV,CAAvB;AACA,UAAMS,OAAO,GAAG,MAAMJ,YAAY,CAACK,aAAb,CAA2B;AAC7CX,MAAAA,UAD6C;AAE7CQ,MAAAA,KAAK,EAAEI,yBAFsC;AAG7CC,MAAAA,KAAK,EAAE,cAHsC;AAI7CC,MAAAA,KAAK,EAAEf,YAAY,CAACgB;AAJyB,KAA3B,CAAtB;;AAMA,QAAIL,OAAJ,EAAa;AAET,aAAO,MAAML,eAAe,CAACW,MAAhB,CAAuB;AAAEC,QAAAA,IAAI,EAAElB,YAAR;AAAsBmB,QAAAA,KAAK,EAAElB,UAA7B;AAAyCC,QAAAA;AAAzC,OAAvB,CAAb;AAEH;;AACD,WAAOkB,OAAO,CAACC,MAAR,CAAe,qBAAmB;AACrCC,MAAAA,OAAO,EAAG,OAAMZ,sBAAY,kBAAiBG,yBAAe,oBAAmBb,YAAY,CAACgB,YAAa;AADpE,KAAnB,CAAf,CAAP;AAGH,GAhBD,CAiBA,OAAOO,KAAP,EAAc;AACV,UAAM,oBAAkB;AAAEA,MAAAA;AAAF,KAAlB,CAAN;AACH;AACJ,CA/BD","sourcesContent":["import {\n    MODEL_AGENT,\n    MODEL_CATEGORY\n} from '../../../util/constants';\nimport GlobalDefaultError from '../../errors/global.default-error';\nimport RedisErrorHandler from '../../errors/redis.error-handler';\n\nmodule.exports = async function (\n    {\n        id,\n        categoryData,\n        AgentModel = null,\n        returnModel = false\n    }\n) {\n\n    const { globalService, categoryService, agentService } = await this.server.services();\n\n    try {\n        AgentModel = AgentModel || await globalService.findById({ id, model: MODEL_AGENT, returnModel: true });\n        const isValid = await agentService.isModelUnique({\n            AgentModel,\n            model: MODEL_CATEGORY,\n            field: 'categoryName',\n            value: categoryData.categoryName\n        });\n        if (isValid) {\n\n            return await categoryService.create({ data: categoryData, agent: AgentModel, returnModel });\n\n        }\n        return Promise.reject(GlobalDefaultError({\n            message: `The ${MODEL_AGENT} already has a ${MODEL_CATEGORY} with the name= \"${categoryData.categoryName}\".`\n        }));\n    }\n    catch (error) {\n        throw RedisErrorHandler({ error });\n    }\n};\n"],"file":"agent.create-category.service.js"}