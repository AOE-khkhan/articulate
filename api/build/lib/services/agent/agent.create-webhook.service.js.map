{"version":3,"sources":["../../../../server/lib/services/agent/agent.create-webhook.service.js"],"names":["module","exports","id","AgentModel","webhookData","returnModel","server","services","globalService","webhookService","findById","model","MODEL_AGENT","children","getAll","MODEL_WEBHOOK","length","Promise","reject","mainType","mainId","subType","create","data","parent","error"],"mappings":";;AAAA;;AAIA;;AACA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,gBACb;AACIC,EAAAA,EADJ;AAEIC,EAAAA,UAAU,GAAG,IAFjB;AAGIC,EAAAA,WAHJ;AAIIC,EAAAA,WAAW,GAAG;AAJlB,CADa,EAOf;AAAA,eAE4C,MAAM,KAAKC,MAAL,CAAYC,QAAZ,EAFlD;AAAA,QAEUC,aAFV,QAEUA,aAFV;AAAA,QAEyBC,cAFzB,QAEyBA,cAFzB;;AAIE,MAAI;AACAN,IAAAA,UAAU,GAAGA,UAAU,KAAI,MAAMK,aAAa,CAACE,QAAd,CAAuB;AAAER,MAAAA,EAAF;AAAMS,MAAAA,KAAK,EAAEC,sBAAb;AAA0BP,MAAAA,WAAW,EAAE;AAAvC,KAAvB,CAAV,CAAvB;AACA,UAAMQ,QAAQ,GAAG,MAAMV,UAAU,CAACW,MAAX,CAAkBC,wBAAlB,EAAiCA,wBAAjC,CAAvB;;AACA,QAAIF,QAAQ,CAACG,MAAT,GAAkB,CAAtB,EAAyB;AACrB,aAAOC,OAAO,CAACC,MAAR,CAAe,qBAAwB;AAC1CC,QAAAA,QAAQ,EAAEP,sBADgC;AAE1CQ,QAAAA,MAAM,EAAElB,EAFkC;AAG1CmB,QAAAA,OAAO,EAAEN;AAHiC,OAAxB,CAAf,CAAP;AAKH;;AACD,WAAO,MAAMN,cAAc,CAACa,MAAf,CAAsB;AAC/BC,MAAAA,IAAI,EAAEnB,WADyB;AAE/BoB,MAAAA,MAAM,EAAErB,UAFuB;AAG/BE,MAAAA;AAH+B,KAAtB,CAAb;AAKH,GAfD,CAgBA,OAAOoB,KAAP,EAAc;AACV,UAAM,oBAAkB;AAAEA,MAAAA;AAAF,KAAlB,CAAN;AACH;AACJ,CA9BD","sourcesContent":["import {\n    MODEL_AGENT,\n    MODEL_WEBHOOK\n} from '../../../util/constants';\nimport RedisErrorHandler from '../../errors/redis.error-handler';\nimport RedisOnlyOneLinkedError from '../../errors/redis.only-one-linked-error';\n\nmodule.exports = async function (\n    {\n        id,\n        AgentModel = null,\n        webhookData,\n        returnModel = false\n    }\n) {\n\n    const { globalService, webhookService } = await this.server.services();\n\n    try {\n        AgentModel = AgentModel || await globalService.findById({ id, model: MODEL_AGENT, returnModel: true });\n        const children = await AgentModel.getAll(MODEL_WEBHOOK, MODEL_WEBHOOK);\n        if (children.length > 0) {\n            return Promise.reject(RedisOnlyOneLinkedError({\n                mainType: MODEL_AGENT,\n                mainId: id,\n                subType: MODEL_WEBHOOK\n            }));\n        }\n        return await webhookService.create({\n            data: webhookData,\n            parent: AgentModel,\n            returnModel\n        });\n    }\n    catch (error) {\n        throw RedisErrorHandler({ error });\n    }\n};\n"],"file":"agent.create-webhook.service.js"}