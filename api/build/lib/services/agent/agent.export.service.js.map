{"version":3,"sources":["../../../../server/lib/services/agent/agent.export.service.js"],"names":["exportMap","model","export","returnModel","TYPE_WEBHOOK","TYPE_POST_FORMAT","USE_WEBHOOK","USE_POST_FORMAT","module","exports","id","redis","server","app","services","globalService","exported","loadWebhookOrPostFormat","parentModel","type","modelName","MODEL_WEBHOOK","MODEL_POST_FORMAT","property","Model","loadFirstLinked","isLoaded","AgentModel","factory","MODEL_AGENT","Promise","reject","ActionModels","loadAllLinked","MODEL_ACTION","actions","all","map","ActionModel","webhook","postFormat","CategoryModels","MODEL_CATEGORY","categories","CategoryModel","CategorySayingModels","MODEL_SAYING","sayings","KeywordModels","MODEL_KEYWORD","keywords","error"],"mappings":"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","sourcesContent":["import {\n    MODEL_ACTION,\n    MODEL_AGENT,\n    MODEL_CATEGORY,\n    MODEL_KEYWORD,\n    MODEL_POST_FORMAT,\n    MODEL_SAYING,\n    MODEL_WEBHOOK\n} from '../../../util/constants';\nimport NotFoundError from '../../errors/global.not-found-error';\nimport RedisErrorHandler from '../../errors/redis.error-handler';\n\n//const logger = require('../../../server/util/logger')({ name: `service:agent:export` });\n\nconst exportMap = (model) => model.export();\nconst returnModel = true;\nconst TYPE_WEBHOOK = 'webhook';\nconst TYPE_POST_FORMAT = 'postFormat';\nconst USE_WEBHOOK = 'useWebhook';\nconst USE_POST_FORMAT = 'usePostFormat';\n\nmodule.exports = async function ({ id }) {\n\n    const { redis } = this.server.app;\n    const { globalService } = await this.server.services();\n    let exported = {};\n\n    const loadWebhookOrPostFormat = async ({ parentModel, type }) => {\n\n        const modelName = type === TYPE_WEBHOOK ? MODEL_WEBHOOK : MODEL_POST_FORMAT;\n        const property = type === TYPE_WEBHOOK ? USE_WEBHOOK : USE_POST_FORMAT;\n        if (!parentModel.property(property)) {\n            return {};\n        }\n        const Model = await globalService.loadFirstLinked({ parentModel, model: modelName, returnModel });\n        if (Model.isLoaded) {\n            return { [type]: Model.export() };\n        }\n    };\n    try {\n        const AgentModel = await redis.factory(MODEL_AGENT, id);\n        if (!AgentModel.isLoaded) {\n            return Promise.reject(NotFoundError({ id, model: MODEL_AGENT }));\n        }\n        // [Agent]\n        exported = AgentModel.export();\n\n        // [Agent] [Action]\n        const ActionModels = await globalService.loadAllLinked({ parentModel: AgentModel, model: MODEL_ACTION, returnModel });\n        exported = {\n            ...exported, ...{\n                actions: await Promise.all(ActionModels.map(async (ActionModel) => {\n\n                    // [Agent] [Action] [Webhook]\n                    const webhook = await loadWebhookOrPostFormat({ parentModel: ActionModel, type: TYPE_WEBHOOK });\n                    // [Agent] [Action] [PostFormat]\n                    const postFormat = await loadWebhookOrPostFormat({ parentModel: ActionModel, type: TYPE_POST_FORMAT });\n                    return { ...ActionModel.export(), ...webhook, ...postFormat };\n                }))\n            }\n        };\n\n        // [Agent] [Category]\n        const CategoryModels = await globalService.loadAllLinked({ parentModel: AgentModel, model: MODEL_CATEGORY, returnModel });\n        exported = {\n            ...exported, ...{\n                categories: await Promise.all(CategoryModels.map(async (CategoryModel) => {\n                    // [Agent] [Category] [Saying]\n                    const CategorySayingModels = await globalService.loadAllLinked({ parentModel: CategoryModel, model: MODEL_SAYING, returnModel });\n                    return { ...CategoryModel.export(), ...{ sayings: CategorySayingModels.map(exportMap) } };\n                }))\n            }\n        };\n\n        // [Agent] [Keyword]\n        const KeywordModels = await globalService.loadAllLinked({ parentModel: AgentModel, model: MODEL_KEYWORD, returnModel });\n        exported = { ...exported, ...{ keywords: KeywordModels.map(exportMap) } };\n\n        // [Agent] [PostFormat]\n        const webhook = await loadWebhookOrPostFormat({ parentModel: AgentModel, type: TYPE_WEBHOOK });\n\n        // [Agent] [Webhook]\n        const postFormat = await loadWebhookOrPostFormat({ parentModel: AgentModel, type: TYPE_POST_FORMAT });\n        exported = { ...exported, ...webhook, ...postFormat };\n        return exported;\n    }\n    catch (error) {\n        throw RedisErrorHandler({ error });\n    }\n};\n"],"file":"agent.export.service.js"}