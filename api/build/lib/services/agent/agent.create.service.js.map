{"version":3,"sources":["../../../../server/lib/services/agent/agent.create.service.js"],"names":["module","exports","data","isImport","returnModel","defaultFallbackAction","useWebhook","usePostFormat","responses","slots","redis","server","app","services","settingsService","agentService","status","STATUS_OUT_OF_DATE","STATUS_READY","settings","enableModelsPerCategory","undefined","AgentModel","factory","MODEL_AGENT","allSettings","findAll","actionName","CONFIG_SETTINGS_DEFAULT_FALLBACK_ACTION_NAME","_","each","CONFIG_SETTINGS_RESPONSES_AGENT_DEFAULT","fallbackResponse","push","textResponse","actions","CONFIG_SETTINGS_DEFAULT_AGENT","value","fallbackAction","model","createInstance","createAction","actionData","allProperties","error"],"mappings":";;AAAA;;AACA;;AAQA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,gBAAgB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAQ,GAAG,KAAnB;AAA0BC,EAAAA,WAAW,GAAG;AAAxC,CAAhB,EAAiE;AAE9E,QAAMC,qBAAqB,GAAG;AAC1BC,IAAAA,UAAU,EAAE,KADc;AAE1BC,IAAAA,aAAa,EAAE,KAFW;AAG1BC,IAAAA,SAAS,EAAE,EAHe;AAI1BC,IAAAA,KAAK,EAAE;AAJmB,GAA9B;AAF8E,QAStEC,KATsE,GAS5D,KAAKC,MAAL,CAAYC,GATgD,CAStEF,KATsE;;AAAA,eAUpC,MAAM,KAAKC,MAAL,CAAYE,QAAZ,EAV8B;AAAA,QAUtEC,eAVsE,QAUtEA,eAVsE;AAAA,QAUrDC,YAVqD,QAUrDA,YAVqD;;AAY9Eb,EAAAA,IAAI,CAACc,MAAL,GAAcb,QAAQ,GAAGc,6BAAH,GAAyBf,IAAI,CAACc,MAAL,IAAeE,uBAA9D;AACAhB,EAAAA,IAAI,CAACiB,QAAL,GAAgB,EAAhB;;AACA,MAAIjB,IAAI,CAACkB,uBAAL,KAAiCC,SAArC,EAAgD;AAC5CnB,IAAAA,IAAI,CAACkB,uBAAL,GAA+B,IAA/B;AACH;;AAED,QAAME,UAAU,GAAG,MAAMZ,KAAK,CAACa,OAAN,CAAcC,sBAAd,CAAzB;;AACA,MAAI;AACA,UAAMC,WAAW,GAAG,MAAMX,eAAe,CAACY,OAAhB,EAA1B;AAEArB,IAAAA,qBAAqB,CAACsB,UAAtB,GAAmCF,WAAW,CAACG,uDAAD,CAA9C;;AACAC,oBAAEC,IAAF,CAAOL,WAAW,CAACM,kDAAD,CAAlB,EAA8DC,gBAAD,IAAsB;AAE/E3B,MAAAA,qBAAqB,CAACG,SAAtB,CAAgCyB,IAAhC,CAAqC;AACjCC,QAAAA,YAAY,EAAEF,gBADmB;AAEjCG,QAAAA,OAAO,EAAE;AAFwB,OAArC;AAIH,KAND;;AAQAN,oBAAEC,IAAF,CAAOM,wCAAP,EAAuCC,KAAD,IAAW;AAE7CnC,MAAAA,IAAI,CAACiB,QAAL,CAAckB,KAAd,IAAuBZ,WAAW,CAACY,KAAD,CAAlC;AACH,KAHD;;AAKAnC,IAAAA,IAAI,CAACoC,cAAL,GAAsBnC,QAAQ,GAAGD,IAAI,CAACoC,cAAR,GAAyBb,WAAW,CAACG,uDAAD,CAAlE;;AAEA,QAAIzB,QAAQ,IAAID,IAAI,CAACqC,KAArB,EAA2B;AACvB,aAAOrC,IAAI,CAACqC,KAAZ;AACH;;AAED,UAAMjB,UAAU,CAACkB,cAAX,CAA0B;AAAEtC,MAAAA;AAAF,KAA1B,CAAN;;AACA,QAAI,CAACC,QAAL,EAAc;AACV,YAAMY,YAAY,CAAC0B,YAAb,CAA0B;AAC5BnB,QAAAA,UAD4B;AAE5BoB,QAAAA,UAAU,EAAErC;AAFgB,OAA1B,CAAN;AAIH;;AACD,WAAOD,WAAW,GAAGkB,UAAH,GAAgBA,UAAU,CAACqB,aAAX,EAAlC;AACH,GA/BD,CAgCA,OAAOC,KAAP,EAAc;AACV,UAAM,oBAAkB;AAAEA,MAAAA;AAAF,KAAlB,CAAN;AACH;AACJ,CAtDD","sourcesContent":["import _ from 'lodash';\nimport {\n    CONFIG_SETTINGS_DEFAULT_AGENT,\n    MODEL_AGENT,\n    STATUS_OUT_OF_DATE,\n    STATUS_READY,\n    CONFIG_SETTINGS_DEFAULT_FALLBACK_ACTION_NAME,\n    CONFIG_SETTINGS_RESPONSES_AGENT_DEFAULT\n} from '../../../util/constants';\nimport RedisErrorHandler from '../../errors/redis.error-handler';\n\nmodule.exports = async function ({ data, isImport = false, returnModel = false }) {\n\n    const defaultFallbackAction = {\n        useWebhook: false,\n        usePostFormat: false,\n        responses: [],\n        slots: []\n    };\n\n    const { redis } = this.server.app;\n    const { settingsService, agentService } = await this.server.services();\n\n    data.status = isImport ? STATUS_OUT_OF_DATE : (data.status || STATUS_READY);\n    data.settings = {};\n    if (data.enableModelsPerCategory === undefined) {\n        data.enableModelsPerCategory = true;\n    }\n\n    const AgentModel = await redis.factory(MODEL_AGENT);\n    try {\n        const allSettings = await settingsService.findAll();\n\n        defaultFallbackAction.actionName = allSettings[CONFIG_SETTINGS_DEFAULT_FALLBACK_ACTION_NAME];\n        _.each(allSettings[CONFIG_SETTINGS_RESPONSES_AGENT_DEFAULT], (fallbackResponse) => {\n\n            defaultFallbackAction.responses.push({\n                textResponse: fallbackResponse,\n                actions: []\n            });\n        });\n\n        _.each(CONFIG_SETTINGS_DEFAULT_AGENT, (value) => {\n\n            data.settings[value] = allSettings[value];\n        });\n\n        data.fallbackAction = isImport ? data.fallbackAction : allSettings[CONFIG_SETTINGS_DEFAULT_FALLBACK_ACTION_NAME];\n\n        if (isImport && data.model){\n            delete data.model;\n        }\n\n        await AgentModel.createInstance({ data });\n        if (!isImport){\n            await agentService.createAction({\n                AgentModel,\n                actionData: defaultFallbackAction\n            });\n        }\n        return returnModel ? AgentModel : AgentModel.allProperties();\n    }\n    catch (error) {\n        throw RedisErrorHandler({ error });\n    }\n};\n"],"file":"agent.create.service.js"}