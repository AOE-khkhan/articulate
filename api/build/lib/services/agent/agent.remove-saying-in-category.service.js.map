{"version":3,"sources":["../../../../server/lib/services/agent/agent.remove-saying-in-category.service.js"],"names":["module","exports","id","categoryId","sayingId","server","services","globalService","sayingService","modelPath","MODEL_AGENT","MODEL_CATEGORY","MODEL_SAYING","modelPathIds","models","getAllModelsInPath","ids","returnModel","AgentModel","CategoryModel","SayingModel","remove","error","message"],"mappings":";;AAAA;;AAKA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,gBAAgB;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,UAAN;AAAkBC,EAAAA;AAAlB,CAAhB,EAA8C;AAAA,eAElB,MAAM,KAAKC,MAAL,CAAYC,QAAZ,EAFY;AAAA,QAEnDC,aAFmD,QAEnDA,aAFmD;AAAA,QAEpCC,aAFoC,QAEpCA,aAFoC;;AAI3D,MAAI;AACA,UAAMC,SAAS,GAAG,CAACC,sBAAD,EAAcC,yBAAd,EAA8BC,uBAA9B,CAAlB;AACA,UAAMC,YAAY,GAAG,CAACX,EAAD,EAAKC,UAAL,EAAiBC,QAAjB,CAArB;AACA,UAAMU,MAAM,GAAG,MAAMP,aAAa,CAACQ,kBAAd,CAAiC;AAAEN,MAAAA,SAAF;AAAaO,MAAAA,GAAG,EAAEH,YAAlB;AAAgCI,MAAAA,WAAW,EAAE;AAA7C,KAAjC,CAArB;AACA,UAAMC,UAAU,GAAGJ,MAAM,CAACJ,sBAAD,CAAzB;AACA,UAAMS,aAAa,GAAGL,MAAM,CAACH,yBAAD,CAA5B;AACA,UAAMS,WAAW,GAAGN,MAAM,CAACF,uBAAD,CAA1B;AAEA,WAAO,MAAMJ,aAAa,CAACa,MAAd,CAAqB;AAAED,MAAAA,WAAF;AAAeF,MAAAA,UAAf;AAA2BC,MAAAA;AAA3B,KAArB,CAAb;AACH,GATD,CAUA,OAAOG,KAAP,EAAc;AACV,UAAM,oBAAkB;AAAEA,MAAAA,KAAF;AAASC,MAAAA,OAAO,EAAG,aAAYrB,EAAG,+BAA8BE,QAAS;AAAzE,KAAlB,CAAN;AACH;AAEJ,CAlBD","sourcesContent":["import {\n    MODEL_AGENT,\n    MODEL_CATEGORY,\n    MODEL_SAYING\n} from '../../../util/constants';\nimport RedisErrorHandler from '../../errors/redis.error-handler';\n\nmodule.exports = async function ({ id, categoryId, sayingId }) {\n\n    const { globalService, sayingService } = await this.server.services();\n\n    try {\n        const modelPath = [MODEL_AGENT, MODEL_CATEGORY, MODEL_SAYING];\n        const modelPathIds = [id, categoryId, sayingId];\n        const models = await globalService.getAllModelsInPath({ modelPath, ids: modelPathIds, returnModel: true });\n        const AgentModel = models[MODEL_AGENT];\n        const CategoryModel = models[MODEL_CATEGORY];\n        const SayingModel = models[MODEL_SAYING];\n\n        return await sayingService.remove({ SayingModel, AgentModel, CategoryModel });\n    }\n    catch (error) {\n        throw RedisErrorHandler({ error, message: `Agent id=[${id}] error removing Saying id=[${sayingId}]` });\n    }\n\n};\n"],"file":"agent.remove-saying-in-category.service.js"}