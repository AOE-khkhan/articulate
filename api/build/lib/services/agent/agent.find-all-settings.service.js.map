{"version":3,"sources":["../../../../server/lib/services/agent/agent.find-all-settings.service.js"],"names":["module","exports","id","server","services","globalService","agent","findById","model","MODEL_AGENT","settings","error"],"mappings":";;AAAA;;AACA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,gBAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAAwB;AAAA,eAEX,MAAM,KAAKC,MAAL,CAAYC,QAAZ,EAFK;AAAA,QAE7BC,aAF6B,QAE7BA,aAF6B;;AAGrC,MAAI;AAEA,UAAMC,KAAK,GAAG,MAAMD,aAAa,CAACE,QAAd,CAAuB;AAAEL,MAAAA,EAAF;AAAMM,MAAAA,KAAK,EAAEC;AAAb,KAAvB,CAApB;AACA,WAAO,MAAMH,KAAK,CAACI,QAAnB;AACH,GAJD,CAKA,OAAOC,KAAP,EAAc;AACV,UAAM,oBAAkB;AAAEA,MAAAA;AAAF,KAAlB,CAAN;AACH;AACJ,CAXD","sourcesContent":["import { MODEL_AGENT } from '../../../util/constants';\nimport RedisErrorHandler from '../../errors/redis.error-handler';\n\nmodule.exports = async function ({ id }) {\n\n    const { globalService } = await this.server.services();\n    try {\n\n        const agent = await globalService.findById({ id, model: MODEL_AGENT });\n        return await agent.settings;\n    }\n    catch (error) {\n        throw RedisErrorHandler({ error });\n    }\n};\n"],"file":"agent.find-all-settings.service.js"}