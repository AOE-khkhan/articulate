{"version":3,"sources":["../../../../server/lib/services/agent/agent.create-post-format.service.js"],"names":["module","exports","id","postFormatData","AgentModel","returnModel","server","services","globalService","postFormatService","findById","model","MODEL_AGENT","children","getAll","MODEL_POST_FORMAT","length","Promise","reject","mainType","mainId","subType","create","data","parent","error"],"mappings":";;AAAA;;AAIA;;AACA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,gBACb;AACIC,EAAAA,EADJ;AAEIC,EAAAA,cAFJ;AAGIC,EAAAA,UAAU,GAAG,IAHjB;AAIIC,EAAAA,WAAW,GAAG;AAJlB,CADa,EAOf;AAAA,eAE+C,MAAM,KAAKC,MAAL,CAAYC,QAAZ,EAFrD;AAAA,QAEUC,aAFV,QAEUA,aAFV;AAAA,QAEyBC,iBAFzB,QAEyBA,iBAFzB;;AAIE,MAAI;AACAL,IAAAA,UAAU,GAAGA,UAAU,KAAI,MAAMI,aAAa,CAACE,QAAd,CAAuB;AAAER,MAAAA,EAAF;AAAMS,MAAAA,KAAK,EAAEC,sBAAb;AAA0BP,MAAAA,WAAW,EAAE;AAAvC,KAAvB,CAAV,CAAvB;AACA,UAAMQ,QAAQ,GAAG,MAAMT,UAAU,CAACU,MAAX,CAAkBC,4BAAlB,EAAqCA,4BAArC,CAAvB;;AACA,QAAIF,QAAQ,CAACG,MAAT,GAAkB,CAAtB,EAAyB;AACrB,aAAOC,OAAO,CAACC,MAAR,CAAe,qBAAwB;AAC1CC,QAAAA,QAAQ,EAAEP,sBADgC;AAE1CQ,QAAAA,MAAM,EAAElB,EAFkC;AAG1CmB,QAAAA,OAAO,EAAEN;AAHiC,OAAxB,CAAf,CAAP;AAKH;;AACD,WAAO,MAAMN,iBAAiB,CAACa,MAAlB,CAAyB;AAClCC,MAAAA,IAAI,EAAEpB,cAD4B;AAElCqB,MAAAA,MAAM,EAAEpB,UAF0B;AAGlCC,MAAAA;AAHkC,KAAzB,CAAb;AAKH,GAfD,CAgBA,OAAOoB,KAAP,EAAc;AACV,UAAM,oBAAkB;AAAEA,MAAAA;AAAF,KAAlB,CAAN;AACH;AACJ,CA9BD","sourcesContent":["import {\n    MODEL_AGENT,\n    MODEL_POST_FORMAT\n} from '../../../util/constants';\nimport RedisErrorHandler from '../../errors/redis.error-handler';\nimport RedisOnlyOneLinkedError from '../../errors/redis.only-one-linked-error';\n\nmodule.exports = async function (\n    {\n        id,\n        postFormatData,\n        AgentModel = null,\n        returnModel = false\n    }\n) {\n\n    const { globalService, postFormatService } = await this.server.services();\n\n    try {\n        AgentModel = AgentModel || await globalService.findById({ id, model: MODEL_AGENT, returnModel: true });\n        const children = await AgentModel.getAll(MODEL_POST_FORMAT, MODEL_POST_FORMAT);\n        if (children.length > 0) {\n            return Promise.reject(RedisOnlyOneLinkedError({\n                mainType: MODEL_AGENT,\n                mainId: id,\n                subType: MODEL_POST_FORMAT\n            }));\n        }\n        return await postFormatService.create({\n            data: postFormatData,\n            parent: AgentModel,\n            returnModel\n        });\n    }\n    catch (error) {\n        throw RedisErrorHandler({ error });\n    }\n};\n"],"file":"agent.create-post-format.service.js"}