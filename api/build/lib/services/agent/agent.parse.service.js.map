{"version":3,"sources":["../../../../server/lib/services/agent/agent.parse.service.js"],"names":["module","exports","id","AgentModel","text","timezone","sessionId","startTime","Moment","redis","server","app","services","agentService","keywordService","documentService","factory","MODEL_AGENT","agent","allProperties","trainedCategories","getTrainedCategories","settings","ducklingURL","rasaURL","spacyPretrainedEntities","ducklingDimension","rasaKeywords","_","compact","parseRasaKeywords","ducklingKeywords","parseDucklingKeywords","regexKeywords","parseRegexKeywords","parsedSystemKeywords","parseSystemKeywords","parseResult","rasa","duckling","regex","endTime","duration","diff","asMilliseconds","maximumSayingScore","map","max","maximumCategoryScore","create","data","document","PARAM_DOCUMENT_TIME_STAMP","Date","toISOString","PARAM_DOCUMENT_RASA_RESULTS","orderBy","PARAM_DOCUMENT_MAXIMUM_SAYING_SCORE","PARAM_DOCUMENT_TOTAL_ELAPSED_TIME","PARAM_DOCUMENT_MAXIMUM_CATEGORY_SCORE","PARAM_DOCUMENT_AGENT_ID","PARAM_DOCUMENT_AGENT_MODEL","model","PARAM_DOCUMENT_SESSION","error"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport Moment from 'moment';\nimport {\n    MODEL_AGENT,\n    PARAM_DOCUMENT_AGENT_ID,\n    PARAM_DOCUMENT_AGENT_MODEL,\n    PARAM_DOCUMENT_MAXIMUM_CATEGORY_SCORE,\n    PARAM_DOCUMENT_MAXIMUM_SAYING_SCORE,\n    PARAM_DOCUMENT_RASA_RESULTS,\n    PARAM_DOCUMENT_SESSION,\n    PARAM_DOCUMENT_TIME_STAMP,\n    PARAM_DOCUMENT_TOTAL_ELAPSED_TIME\n} from '../../../util/constants';\nimport RedisErrorHandler from '../../errors/redis.error-handler';\n\nmodule.exports = async function ({ id, AgentModel, text, timezone, sessionId = null }) {\n\n    const startTime = new Moment();\n    const { redis } = this.server.app;\n    const {\n        agentService,\n        keywordService,\n        documentService\n    } = await this.server.services();\n\n    try {\n        AgentModel = AgentModel || await redis.factory(MODEL_AGENT, id);\n        const agent = AgentModel.allProperties();\n        const trainedCategories = await agentService.getTrainedCategories({ AgentModel });\n        const {\n            ducklingURL,\n            rasaURL,\n            spacyPretrainedEntities,\n            ducklingDimension\n        } = agent.settings;\n\n        const rasaKeywords = _.compact(await agentService.parseRasaKeywords({ AgentModel, text, trainedCategories, rasaURL }));\n        const ducklingKeywords = _.compact(await agentService.parseDucklingKeywords({ AgentModel, text, timezone, ducklingURL }));\n        const regexKeywords = await agentService.parseRegexKeywords({ AgentModel, text });\n\n        const parsedSystemKeywords = await keywordService.parseSystemKeywords({\n            parseResult: {\n                rasa: rasaKeywords,\n                duckling: ducklingKeywords,\n                regex: regexKeywords\n            },\n            spacyPretrainedEntities,\n            ducklingDimension\n        });\n        const endTime = new Moment();\n        const duration = Moment.duration(endTime.diff(startTime), 'ms').asMilliseconds();\n        const maximumSayingScore = _(parsedSystemKeywords).map('action').map('confidence').compact().max();\n        const maximumCategoryScore = _(parsedSystemKeywords).map('categoryScore').compact().max();\n        return await documentService.create({\n            data: {\n                document: text,\n                [PARAM_DOCUMENT_TIME_STAMP]: new Date().toISOString(),\n                [PARAM_DOCUMENT_RASA_RESULTS]: _.orderBy(parsedSystemKeywords, 'categoryScore', 'desc'),\n                [PARAM_DOCUMENT_MAXIMUM_SAYING_SCORE]: maximumSayingScore,\n                [PARAM_DOCUMENT_TOTAL_ELAPSED_TIME]: duration,\n                [PARAM_DOCUMENT_MAXIMUM_CATEGORY_SCORE]: maximumCategoryScore || null,\n                [PARAM_DOCUMENT_AGENT_ID]: agent.id,\n                [PARAM_DOCUMENT_AGENT_MODEL]: agent.model,\n                [PARAM_DOCUMENT_SESSION]: sessionId\n            }\n        });\n    }\n    catch (error) {\n        throw RedisErrorHandler({ error });\n    }\n};\n"],"file":"agent.parse.service.js"}