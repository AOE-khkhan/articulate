{"version":3,"sources":["../../../../server/lib/services/category/category.train.service.js"],"names":["module","exports","AgentModel","CategoryModel","returnModel","agent","allProperties","category","server","services","categoryService","globalService","rasaNLUService","model","Guid","create","toString","keywords","loadAllByIds","ids","getAll","MODEL_KEYWORD","sayings","MODEL_SAYING","trainingData","generateTrainingData","extraTrainingData","pipeline","numberOfSayings","settings","CONFIG_SETTINGS_KEYWORD_PIPELINE","CONFIG_SETTINGS_SAYING_PIPELINE","RASA_MODEL_JUST_ER","categoryName","property","STATUS_TRAINING","saveInstance","train","project","agentName","oldModel","trainingSet","RASA_NLU_DATA","language","baseURL","CONFIG_SETTINGS_RASA_URL","utc","format","STATUS_READY","error","STATUS_ERROR"],"mappings":"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","sourcesContent":["import Guid from 'guid';\nimport Moment from 'moment';\nimport {\n    CONFIG_SETTINGS_KEYWORD_PIPELINE,\n    CONFIG_SETTINGS_RASA_URL,\n    CONFIG_SETTINGS_SAYING_PIPELINE,\n    MODEL_KEYWORD,\n    MODEL_SAYING,\n    RASA_MODEL_JUST_ER,\n    RASA_NLU_DATA,\n    STATUS_ERROR,\n    STATUS_READY,\n    STATUS_TRAINING\n} from '../../../util/constants';\nimport RedisErrorHandler from '../../errors/redis.error-handler';\n\nmodule.exports = async function ({ AgentModel, CategoryModel, returnModel = false }) {\n\n    const agent = AgentModel.allProperties();\n    const category = CategoryModel.allProperties();\n    const { categoryService, globalService, rasaNLUService } = await this.server.services();\n    let model = Guid.create().toString();\n    try {\n        const keywords = await globalService.loadAllByIds({ ids: await CategoryModel.getAll(MODEL_KEYWORD, MODEL_KEYWORD), model: MODEL_KEYWORD });\n        const sayings = await globalService.loadAllByIds({ ids: await CategoryModel.getAll(MODEL_SAYING, MODEL_SAYING), model: MODEL_SAYING });\n        const trainingData = await categoryService.generateTrainingData({ keywords, sayings, extraTrainingData: category.extraTrainingData });\n\n        const pipeline = trainingData.numberOfSayings === 1 ? agent.settings[CONFIG_SETTINGS_KEYWORD_PIPELINE] : agent.settings[CONFIG_SETTINGS_SAYING_PIPELINE];\n        model = (trainingData.numberOfSayings === 1 ? RASA_MODEL_JUST_ER : '') + model;\n        model = category.categoryName + '_' + model;\n\n        CategoryModel.property('status', STATUS_TRAINING);\n        await CategoryModel.saveInstance();\n\n        await rasaNLUService.train({\n            project: agent.agentName,\n            model,\n            oldModel: category.model || null,\n            trainingSet: {\n                [RASA_NLU_DATA]: trainingData[RASA_NLU_DATA]\n            },\n            pipeline,\n            language: agent.language,\n            baseURL: agent.settings[CONFIG_SETTINGS_RASA_URL]\n        });\n        CategoryModel.property('lastTraining', Moment().utc().format());\n        CategoryModel.property('model', model);\n        CategoryModel.property('status', STATUS_READY);\n\n        await CategoryModel.saveInstance();\n        return returnModel ? CategoryModel : CategoryModel.allProperties();\n    }\n    catch (error) {\n        CategoryModel.property('status', STATUS_ERROR);\n        await CategoryModel.saveInstance();\n        throw RedisErrorHandler({ error });\n    }\n};\n"],"file":"category.train.service.js"}