{"version":3,"sources":["../../../../server/lib/services/global/global.get-all-model-in-path.service.js"],"names":["module","exports","modelPath","ids","returnModel","redis","server","app","models","reducer","parent","current","index","factory","belongs","belongsTo","mainType","modelName","mainId","id","subType","subId","reduce","_","map","model","allProperties","error","message","join"],"mappings":";;AAAA;;AACA;;AACA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,gBAAgB;AAAEC,EAAAA,SAAS,GAAG,EAAd;AAAkBC,EAAAA,GAAG,GAAG,EAAxB;AAA4BC,EAAAA,WAAW,GAAG;AAA1C,CAAhB,EAAmE;AAAA,QAExEC,KAFwE,GAE9D,KAAKC,MAAL,CAAYC,GAFkD,CAExEF,KAFwE;;AAIhF,MAAI;AACA,UAAMG,MAAM,GAAG,EAAf;;AACA,UAAMC,OAAO,GAAG,OAAOC,MAAP,EAAeC,OAAf,EAAwBC,KAAxB,KAAkC;AAE9C,UAAI,CAACF,MAAL,EAAa;AACTF,QAAAA,MAAM,CAACG,OAAD,CAAN,GAAkB,MAAMN,KAAK,CAACQ,OAAN,CAAcF,OAAd,EAAuBR,GAAG,CAACS,KAAD,CAA1B,CAAxB;AACA,eAAOJ,MAAM,CAACG,OAAD,CAAb;AACH;;AACDD,MAAAA,MAAM,GAAG,MAAMA,MAAf;AACAF,MAAAA,MAAM,CAACG,OAAD,CAAN,GAAkB,MAAMN,KAAK,CAACQ,OAAN,CAAcF,OAAd,EAAuBR,GAAG,CAACS,KAAD,CAA1B,CAAxB;AAEA,YAAME,OAAO,GAAG,MAAMJ,MAAM,CAACK,SAAP,CAAiBP,MAAM,CAACG,OAAD,CAAvB,EAAkCA,OAAlC,CAAtB;;AACA,UAAIG,OAAJ,EAAa;AACT,eAAON,MAAM,CAACG,OAAD,CAAb;AACH;;AACD,YAAM,qBAAoB;AACtBK,QAAAA,QAAQ,EAAEN,MAAM,CAACO,SADK;AAEtBC,QAAAA,MAAM,EAAER,MAAM,CAACS,EAFO;AAGtBC,QAAAA,OAAO,EAAET,OAHa;AAItBU,QAAAA,KAAK,EAAEV,OAAO,CAACQ;AAJO,OAApB,CAAN;AAMH,KAnBD;;AAqBA,UAAMjB,SAAS,CAACoB,MAAV,CAAiBb,OAAjB,EAA0B,IAA1B,CAAN;;AACA,QAAIL,WAAJ,EAAiB;AACb,aAAOI,MAAP;AACH;;AAED,WAAOe,gBAAEC,GAAF,CAAMhB,MAAN,EAAeiB,KAAD,IAAWA,KAAK,CAACC,aAAN,EAAzB,CAAP;AACH,GA7BD,CA8BA,OAAOC,KAAP,EAAc;AACV,UAAM,oBAAkB;AAAEA,MAAAA,KAAF;AAASC,MAAAA,OAAO,EAAG,kCAAiC1B,SAAS,CAAC2B,IAAV,CAAe,IAAf,CAAqB,mBAAkB1B,GAAG,CAAC0B,IAAJ,CAAS,GAAT,CAAc;AAAzG,KAAlB,CAAN;AACH;AACJ,CArCD","sourcesContent":["import _ from 'lodash';\nimport RedisErrorHandler from '../../errors/redis.error-handler';\nimport RedisNotLinkedError from '../../errors/redis.not-linked-error';\n\nmodule.exports = async function ({ modelPath = [], ids = [], returnModel = false }) {\n\n    const { redis } = this.server.app;\n\n    try {\n        const models = {};\n        const reducer = async (parent, current, index) => {\n\n            if (!parent) {\n                models[current] = await redis.factory(current, ids[index]);\n                return models[current];\n            }\n            parent = await parent;\n            models[current] = await redis.factory(current, ids[index]);\n\n            const belongs = await parent.belongsTo(models[current], current);\n            if (belongs) {\n                return models[current];\n            }\n            throw RedisNotLinkedError({\n                mainType: parent.modelName,\n                mainId: parent.id,\n                subType: current,\n                subId: current.id\n            });\n        };\n\n        await modelPath.reduce(reducer, null);\n        if (returnModel) {\n            return models;\n        }\n\n        return _.map(models, (model) => model.allProperties());\n    }\n    catch (error) {\n        throw RedisErrorHandler({ error, message: `Can't find models in the path '${modelPath.join('->')}' with the ids '${ids.join(',')}'` });\n    }\n};\n"],"file":"global.get-all-model-in-path.service.js"}