{"version":3,"sources":["../../../../server/lib/services/global/global.load-with-includes.service.js"],"names":["module","exports","model","id","relationNames","redis","server","app","Model","factory","props","allProperties","forEach","relationName","Promise","all","map","RelationModel","ids","getAll","results","loadAllByIds","push","r","error","message"],"mappings":";;AAAA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,gBAAgB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,EAAT;AAAaC,EAAAA,aAAa,GAAG;AAA7B,CAAhB,EAAmD;AAAA,QAExDC,KAFwD,GAE9C,KAAKC,MAAL,CAAYC,GAFkC,CAExDF,KAFwD;;AAIhE,MAAI;AACA,UAAMG,KAAK,GAAG,MAAMH,KAAK,CAACI,OAAN,CAAcP,KAAd,EAAqBC,EAArB,CAApB;AACA,UAAMO,KAAK,GAAGF,KAAK,CAACG,aAAN,EAAd;AACAP,IAAAA,aAAa,CAACQ,OAAd,CAAuBC,YAAD,IAAkB;AACpCH,MAAAA,KAAK,CAACG,YAAD,CAAL,GAAsB,EAAtB;AACH,KAFD;AAGA,UAAMC,OAAO,CAACC,GAAR,CAAYX,aAAa,CAACY,GAAd,CAAkB,MAAOH,YAAP,IAAwB;AAExD,YAAMI,aAAa,GAAG,MAAMZ,KAAK,CAACI,OAAN,CAAcI,YAAd,CAA5B;AACA,YAAMK,GAAG,GAAG,MAAMV,KAAK,CAACW,MAAN,CAAaN,YAAb,EAA2BA,YAA3B,CAAlB;AACA,YAAMO,OAAO,GAAG,MAAMH,aAAa,CAACI,YAAd,CAA2B;AAAEH,QAAAA;AAAF,OAA3B,CAAtB;AACAR,MAAAA,KAAK,CAACG,YAAD,CAAL,CAAoBS,IAApB,CAAyB,GAAGF,OAAO,CAACJ,GAAR,CAAaO,CAAD,IAAOA,CAAC,CAACZ,aAAF,EAAnB,CAA5B;AACH,KANiB,CAAZ,CAAN;AAQA,WAAOD,KAAP;AACH,GAfD,CAgBA,OAAOc,KAAP,EAAc;AACV,UAAM,oBAAkB;AAAEA,MAAAA,KAAF;AAASC,MAAAA,OAAO,EAAG,GAAEvB,KAAM;AAA3B,KAAlB,CAAN;AACH;AACJ,CAvBD","sourcesContent":["import RedisErrorHandler from '../../errors/redis.error-handler';\n\nmodule.exports = async function ({ model, id, relationNames = [] }) {\n\n    const { redis } = this.server.app;\n\n    try {\n        const Model = await redis.factory(model, id);\n        const props = Model.allProperties();\n        relationNames.forEach((relationName) => {\n            props[relationName] = [];\n        });\n        await Promise.all(relationNames.map(async (relationName) => {\n\n            const RelationModel = await redis.factory(relationName);\n            const ids = await Model.getAll(relationName, relationName);\n            const results = await RelationModel.loadAllByIds({ ids });\n            props[relationName].push(...results.map((r) => r.allProperties()));\n        }));\n\n        return props;\n    }\n    catch (error) {\n        throw RedisErrorHandler({ error, message: `${model} error loading linked models` });\n    }\n};\n"],"file":"global.load-with-includes.service.js"}