{"version":3,"sources":["../../../../server/lib/services/global/global.search-by-field.service.js"],"names":["module","exports","field","value","model","redis","server","app","Model","factory","searchByField","error","message"],"mappings":";;AAAA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,gBAAgB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAT;AAAgBC,EAAAA;AAAhB,CAAhB,EAAyC;AAAA,QAE9CC,KAF8C,GAEpC,KAAKC,MAAL,CAAYC,GAFwB,CAE9CF,KAF8C;;AAItD,MAAI;AACA,UAAMG,KAAK,GAAG,MAAMH,KAAK,CAACI,OAAN,CAAcL,KAAd,CAApB;AACA,WAAO,MAAMI,KAAK,CAACE,aAAN,CAAoB;AAAER,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAApB,CAAb;AACH,GAHD,CAIA,OAAOQ,KAAP,EAAc;AACV,UAAM,oBAAkB;AAAEA,MAAAA,KAAF;AAASC,MAAAA,OAAO,EAAG,GAAER,KAAM,IAAGF,KAAM,KAAIC,KAAM;AAA9C,KAAlB,CAAN;AACH;AAEJ,CAZD","sourcesContent":["import RedisErrorHandler from '../../errors/redis.error-handler';\n\nmodule.exports = async function ({ field, value, model }) {\n\n    const { redis } = this.server.app;\n\n    try {\n        const Model = await redis.factory(model);\n        return await Model.searchByField({ field, value });\n    }\n    catch (error) {\n        throw RedisErrorHandler({ error, message: `${model} ${field}=[${value}]` });\n    }\n\n};\n"],"file":"global.search-by-field.service.js"}