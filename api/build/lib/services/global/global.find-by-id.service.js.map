{"version":3,"sources":["../../../../server/lib/services/global/global.find-by-id.service.js"],"names":["module","exports","id","model","returnModel","redis","server","app","someFunction","agentModel","agentId","factory","wrapped","performance","timerify","obs","PerformanceObserver","list","console","log","getEntries","observe","entryTypes","buffered","Model","mark","measure","disconnect","allProperties","error","message"],"mappings":";;AAAA;;AAIA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,gBAAgB;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,KAAN;AAAaC,EAAAA,WAAW,GAAG;AAA3B,CAAhB,EAAoD;AAAA,QAEzDC,KAFyD,GAE/C,KAAKC,MAAL,CAAYC,GAFmC,CAEzDF,KAFyD;;AAIjE,MAAI;AACA,UAAMG,YAAY,GAAG,OAAOC,UAAP,EAAmBC,OAAnB,KAA+B;AAEhD,aAAO,MAAML,KAAK,CAACM,OAAN,CAAcF,UAAd,EAA0BC,OAA1B,CAAb;AACH,KAHD;;AAIA,UAAME,OAAO,GAAGC,wBAAYC,QAAZ,CAAqBN,YAArB,CAAhB;;AACA,UAAMO,GAAG,GAAG,IAAIC,+BAAJ,CAAyBC,IAAD,IAAU;AAE1CC,MAAAA,OAAO,CAACC,GAAR,CAAa,6BAAb,EAF0C,CAEE;;AAC5CD,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,UAAL,EAAZ,EAH0C,CAGV;AACnC,KAJW,CAAZ;AAMAL,IAAAA,GAAG,CAACM,OAAJ,CAAY;AAAEC,MAAAA,UAAU,EAAE,CAAC,MAAD,EAAS,SAAT,EAAoB,UAApB,CAAd;AAA+CC,MAAAA,QAAQ,EAAE;AAAzD,KAAZ;AACA,UAAMC,KAAK,GAAG,MAAMZ,OAAO,CAACT,KAAD,EAAQD,EAAR,CAA3B;;AACAW,4BAAYY,IAAZ,CAAkB,OAAMvB,EAAG,EAA3B;;AACAW,4BAAYY,IAAZ,CAAkB,QAAOvB,EAAG,EAA5B;;AACAW,4BAAYY,IAAZ,CAAkB,QAAOvB,EAAG,EAA5B;;AACAW,4BAAYa,OAAZ,CAAqB,OAAMxB,EAAG,YAAWA,EAAG,EAA5C,EAAgD,OAAMA,EAAG,EAAzD,EAA6D,QAAOA,EAAG,EAAvE;;AACAa,IAAAA,GAAG,CAACY,UAAJ;AACA,WAAOvB,WAAW,GAAGoB,KAAH,GAAWA,KAAK,CAACI,aAAN,EAA7B;AACH,GApBD,CAqBA,OAAOC,KAAP,EAAc;AACV,UAAM,oBAAkB;AAAEA,MAAAA,KAAF;AAASC,MAAAA,OAAO,EAAG,GAAE3B,KAAM,QAAOD,EAAG;AAArC,KAAlB,CAAN;AACH;AACJ,CA5BD","sourcesContent":["import {\n    performance,\n    PerformanceObserver\n} from 'perf_hooks';\nimport RedisErrorHandler from '../../errors/redis.error-handler';\n\nmodule.exports = async function ({ id, model, returnModel = false }) {\n\n    const { redis } = this.server.app;\n\n    try {\n        const someFunction = async (agentModel, agentId) => {\n\n            return await redis.factory(agentModel, agentId);\n        };\n        const wrapped = performance.timerify(someFunction);\n        const obs = new PerformanceObserver((list) => {\n\n            console.log(`global.find-by-id.service::`); // TODO: REMOVE!!!!\n            console.log(list.getEntries()); // TODO: REMOVE!!!!\n        });\n\n        obs.observe({ entryTypes: ['mark', 'measure', 'function'], buffered: true });\n        const Model = await wrapped(model, id);\n        performance.mark(`test${id}`);\n        performance.mark(`test2${id}`);\n        performance.mark(`test3${id}`);\n        performance.measure(`test${id} to test3${id}`, `test${id}`, `test3${id}`);\n        obs.disconnect();\n        return returnModel ? Model : Model.allProperties();\n    }\n    catch (error) {\n        throw RedisErrorHandler({ error, message: `${model} id=[${id}]` });\n    }\n};\n"],"file":"global.find-by-id.service.js"}