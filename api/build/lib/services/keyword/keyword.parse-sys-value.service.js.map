{"version":3,"sources":["../../../../server/lib/services/keyword/keyword.parse-sys-value.service.js"],"names":["module","exports","keyword","text","value","KEYWORD_PREFIX_SYS","DUCKLING_TIME","from","to","DUCKLING_DISTANCE","DUCKLING_TEMPERATURE","DUCKLING_VOLUME","unit","DUCKLING_DURATION","normalized","DUCKLING_QUANTITY","product","DUCKLING_URL","category","original","substring","start","end"],"mappings":";;AAAA;;AAWAA,MAAM,CAACC,OAAP,GAAiB,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAuB;AAEpC,MAAIC,KAAJ;;AACA,UAAQF,OAAO,CAACA,OAAhB;AAEI,SAAM,GAAEG,6BAAmB,GAAEC,wBAAc,EAA3C;AACIF,MAAAA,KAAK,GAAG;AACJG,QAAAA,IAAI,EAAEL,OAAO,CAACE,KAAR,CAAcG,IAAd,CAAmBH,KADrB;AAEJI,QAAAA,EAAE,EAAEN,OAAO,CAACE,KAAR,CAAcI,EAAd,CAAiBJ;AAFjB,OAAR;AAIA;;AACJ,SAAM,GAAEC,6BAAmB,GAAEI,4BAAkB,EAA/C;AACA,SAAM,GAAEJ,6BAAmB,GAAEK,+BAAqB,EAAlD;AACA,SAAM,GAAEL,6BAAmB,GAAEM,0BAAgB,EAA7C;AACIP,MAAAA,KAAK,GAAG;AACJA,QAAAA,KAAK,EAAEF,OAAO,CAACE,KAAR,CAAcA,KADjB;AAEJQ,QAAAA,IAAI,EAAEV,OAAO,CAACE,KAAR,CAAcQ;AAFhB,OAAR;AAIA;;AACJ,SAAM,GAAEP,6BAAmB,GAAEQ,4BAAkB,EAA/C;AACIT,MAAAA,KAAK,GAAG;AACJA,QAAAA,KAAK,EAAEF,OAAO,CAACE,KAAR,CAAcA,KADjB;AAEJQ,QAAAA,IAAI,EAAEV,OAAO,CAACE,KAAR,CAAcQ,IAFhB;AAGJE,QAAAA,UAAU,EAAE;AACRV,UAAAA,KAAK,EAAEF,OAAO,CAACE,KAAR,CAAcU,UAAd,CAAyBV,KADxB;AAERQ,UAAAA,IAAI,EAAEV,OAAO,CAACE,KAAR,CAAcU,UAAd,CAAyBF;AAFvB;AAHR,OAAR;AAQA;;AACJ,SAAM,GAAEP,6BAAmB,GAAEU,4BAAkB,EAA/C;AACIX,MAAAA,KAAK,GAAG;AACJA,QAAAA,KAAK,EAAEF,OAAO,CAACE,KAAR,CAAcA,KADjB;AAEJQ,QAAAA,IAAI,EAAEV,OAAO,CAACE,KAAR,CAAcQ,IAFhB;AAGJI,QAAAA,OAAO,EAAEd,OAAO,CAACE,KAAR,CAAcY;AAHnB,OAAR;AAKA;;AACJ,SAAM,GAAEX,6BAAmB,GAAEY,uBAAa,EAA1C;AACIb,MAAAA,KAAK,GAAG;AACJA,QAAAA,KAAK,EAAEF,OAAO,CAACE,KAAR,CAAcA,KADjB;AAEJc,QAAAA,QAAQ,EAAEhB,OAAO,CAACE,KAAR,CAAcc;AAFpB,OAAR;AAIA;;AACJ;AACId,MAAAA,KAAK,GAAG;AACJA,QAAAA,KAAK,EAAEF,OAAO,CAACE,KAAR,CAAcA;AADjB,OAAR;AAGA;AA3CR;;AA6CAA,EAAAA,KAAK,CAACe,QAAN,GAAiBhB,IAAI,CAACiB,SAAL,CAAelB,OAAO,CAACmB,KAAvB,EAA8BnB,OAAO,CAACoB,GAAtC,CAAjB;AACA,SAAOlB,KAAP;AACH,CAlDD","sourcesContent":["import {\n    DUCKLING_DISTANCE,\n    DUCKLING_DURATION,\n    DUCKLING_QUANTITY,\n    DUCKLING_TEMPERATURE,\n    DUCKLING_TIME,\n    DUCKLING_URL,\n    DUCKLING_VOLUME,\n    KEYWORD_PREFIX_SYS\n} from '../../../util/constants';\n\nmodule.exports = ({ keyword, text }) => {\n\n    let value;\n    switch (keyword.keyword) {\n\n        case `${KEYWORD_PREFIX_SYS}${DUCKLING_TIME}`:\n            value = {\n                from: keyword.value.from.value,\n                to: keyword.value.to.value\n            };\n            break;\n        case `${KEYWORD_PREFIX_SYS}${DUCKLING_DISTANCE}`:\n        case `${KEYWORD_PREFIX_SYS}${DUCKLING_TEMPERATURE}`:\n        case `${KEYWORD_PREFIX_SYS}${DUCKLING_VOLUME}`:\n            value = {\n                value: keyword.value.value,\n                unit: keyword.value.unit\n            };\n            break;\n        case `${KEYWORD_PREFIX_SYS}${DUCKLING_DURATION}`:\n            value = {\n                value: keyword.value.value,\n                unit: keyword.value.unit,\n                normalized: {\n                    value: keyword.value.normalized.value,\n                    unit: keyword.value.normalized.unit\n                }\n            };\n            break;\n        case `${KEYWORD_PREFIX_SYS}${DUCKLING_QUANTITY}`:\n            value = {\n                value: keyword.value.value,\n                unit: keyword.value.unit,\n                product: keyword.value.product\n            };\n            break;\n        case `${KEYWORD_PREFIX_SYS}${DUCKLING_URL}`:\n            value = {\n                value: keyword.value.value,\n                category: keyword.value.category\n            };\n            break;\n        default:\n            value = {\n                value: keyword.value.value\n            };\n            break;\n    }\n    value.original = text.substring(keyword.start, keyword.end);\n    return value;\n};\n"],"file":"keyword.parse-sys-value.service.js"}