{"version":3,"sources":["../../../../server/lib/services/keyword/keyword.remove.service.js"],"names":["module","exports","id","KeywordModel","redis","server","app","services","globalService","factory","MODEL_KEYWORD","categories","loadAllLinked","parentModel","model","MODEL_CATEGORY","length","keywordName","allProperties","categoriesNames","map","category","categoryName","Promise","reject","statusCode","message","join","removeInstance","error"],"mappings":";;AAAA;;AAIA;;AACA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,gBAAgB;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAAhB,EAAsC;AAAA,QAE3CC,KAF2C,GAEjC,KAAKC,MAAL,CAAYC,GAFqB,CAE3CF,KAF2C;;AAAA,eAGzB,MAAM,KAAKC,MAAL,CAAYE,QAAZ,EAHmB;AAAA,QAG3CC,aAH2C,QAG3CA,aAH2C;;AAInD,MAAI;AACAL,IAAAA,YAAY,GAAGA,YAAY,KAAI,MAAMC,KAAK,CAACK,OAAN,CAAcC,wBAAd,EAA6BR,EAA7B,CAAV,CAA3B,CADA,CAEA;;AACA,UAAMS,UAAU,GAAG,MAAMH,aAAa,CAACI,aAAd,CAA4B;AAAEC,MAAAA,WAAW,EAAEV,YAAf;AAA6BW,MAAAA,KAAK,EAAEC;AAApC,KAA5B,CAAzB;;AACA,QAAIJ,UAAU,CAACK,MAAX,GAAoB,CAAxB,EAA2B;AACvB,YAAMC,WAAW,GAAG,MAAMd,YAAY,CAACe,aAAb,GAA6BD,WAAvD;AACA,YAAME,eAAe,GAAGR,UAAU,CAACS,GAAX,CAAgBC,QAAD,IAAc;AAEjD,eAAOA,QAAQ,CAACC,YAAhB;AACH,OAHuB,CAAxB;AAIA,aAAOC,OAAO,CAACC,MAAR,CAAe,qBAAmB;AACrCC,QAAAA,UAAU,EAAE,GADyB;AAErCC,QAAAA,OAAO,EAAG,YAAWT,WAAY,gDAA+CE,eAAe,CAACQ,IAAhB,CAAqB,IAArB,CAA2B;AAFtE,OAAnB,CAAf,CAAP;AAIH,KAdD,CAeA;;;AACA,WAAOxB,YAAY,CAACyB,cAAb,EAAP;AACH,GAjBD,CAkBA,OAAOC,KAAP,EAAc;AACV,UAAM,oBAAkB;AAAEA,MAAAA,KAAF;AAASH,MAAAA,OAAO,EAAG,GAAEhB,wBAAc,QAAOR,EAAG;AAA7C,KAAlB,CAAN;AACH;AAEJ,CA1BD","sourcesContent":["import {\n    MODEL_CATEGORY,\n    MODEL_KEYWORD\n} from '../../../util/constants';\nimport GlobalDefaultError from '../../errors/global.default-error';\nimport RedisErrorHandler from '../../errors/redis.error-handler';\n\nmodule.exports = async function ({ id, KeywordModel }) {\n\n    const { redis } = this.server.app;\n    const { globalService } = await this.server.services();\n    try {\n        KeywordModel = KeywordModel || await redis.factory(MODEL_KEYWORD, id);\n        //const keywordCategoryIds = await KeywordModel.getAll(MODEL_CATEGORY, MODEL_CATEGORY);\n        const categories = await globalService.loadAllLinked({ parentModel: KeywordModel, model: MODEL_CATEGORY });\n        if (categories.length > 0) {\n            const keywordName = await KeywordModel.allProperties().keywordName;\n            const categoriesNames = categories.map((category) => {\n\n                return category.categoryName;\n            });\n            return Promise.reject(GlobalDefaultError({\n                statusCode: 400,\n                message: `Keyword '${keywordName}' is been used by the following category(s): ${categoriesNames.join(', ')}`\n            }));\n        }\n        // TODO: Find any Action.slots or Saying.keywords that contains this ID?\n        return KeywordModel.removeInstance();\n    }\n    catch (error) {\n        throw RedisErrorHandler({ error, message: `${MODEL_KEYWORD} id=[${id}]` });\n    }\n\n};\n"],"file":"keyword.remove.service.js"}