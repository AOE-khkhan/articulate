{"version":3,"sources":["../../../../server/lib/services/keyword/keyword.split-added-old-removed-ids.service.js"],"names":["module","exports","oldKeywords","newKeywords","newIds","_","map","uniq","value","id","toString","oldIds","removed","difference","unchanged","intersection","previousKeywords","added","addedNonSystem","filter","keyword","extractor","includes","keywordId"],"mappings":";;AAAA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAAkC;AAE/C,QAAMC,MAAM,GAAGC,gBAAEC,GAAF,CAAM,qBAAEH,WAAF,EAAeG,GAAf,CAAmB,WAAnB,EAAgCC,IAAhC,GAAuCC,KAAvC,EAAN,EAAuDC,EAAD,IAAQA,EAAE,CAACC,QAAH,EAA9D,CAAf;;AACA,QAAMC,MAAM,GAAGN,gBAAEC,GAAF,CAAM,qBAAEJ,WAAF,EAAeI,GAAf,CAAmB,WAAnB,EAAgCC,IAAhC,GAAuCC,KAAvC,EAAN,EAAuDC,EAAD,IAAQA,EAAE,CAACC,QAAH,EAA9D,CAAf;;AAEA,QAAME,OAAO,GAAGP,gBAAEQ,UAAF,CAAaF,MAAb,EAAqBP,MAArB,CAAhB;;AACA,QAAMU,SAAS,GAAGT,gBAAEU,YAAF,CAAeJ,MAAf,EAAuBP,MAAvB,CAAlB;;AACA,QAAMY,gBAAgB,GAAG,CAAC,GAAGF,SAAJ,EAAe,GAAGF,OAAlB,CAAzB;;AACA,QAAMK,KAAK,GAAGZ,gBAAEQ,UAAF,CAAaT,MAAb,EAAqBY,gBAArB,CAAd;;AAEA,QAAME,cAAc,GAAG,qBAAEf,WAAF,EAClBgB,MADkB,CACVC,OAAD,IAAa,CAAC,CAAC,CAACA,OAAO,CAACC,SADb,EACwB;AADxB,GAElBF,MAFkB,CAEVC,OAAD,IAAaf,gBAAEiB,QAAF,CAAWL,KAAX,EAAkBG,OAAO,CAACG,SAA1B,CAFF,EAEwC;AAFxC,GAGlBjB,GAHkB,CAGbc,OAAD,IAAaA,OAAO,CAACG,SAAR,CAAkBb,QAAlB,EAHC,EAIlBH,IAJkB,GAKlBC,KALkB,EAAvB;AAOA,SAAO;AAAES,IAAAA,KAAF;AAASC,IAAAA,cAAT;AAAyBN,IAAAA,OAAzB;AAAkCE,IAAAA;AAAlC,GAAP;AACH,CAlBD","sourcesContent":["import _ from 'lodash';\n\nmodule.exports = ({ oldKeywords, newKeywords }) => {\n\n    const newIds = _.map(_(newKeywords).map('keywordId').uniq().value(), (id) => id.toString());\n    const oldIds = _.map(_(oldKeywords).map('keywordId').uniq().value(), (id) => id.toString());\n\n    const removed = _.difference(oldIds, newIds);\n    const unchanged = _.intersection(oldIds, newIds);\n    const previousKeywords = [...unchanged, ...removed];\n    const added = _.difference(newIds, previousKeywords);\n\n    const addedNonSystem = _(newKeywords)\n        .filter((keyword) => !!!keyword.extractor) //Only Non system\n        .filter((keyword) => _.includes(added, keyword.keywordId)) // Only new (ignore unchanged)\n        .map((keyword) => keyword.keywordId.toString())\n        .uniq()\n        .value();\n\n    return { added, addedNonSystem, removed, unchanged };\n};\n"],"file":"keyword.split-added-old-removed-ids.service.js"}