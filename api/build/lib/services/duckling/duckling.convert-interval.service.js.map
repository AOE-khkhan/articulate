{"version":3,"sources":["../../../../server/lib/services/duckling/duckling.convert-interval.service.js"],"names":["module","exports","ducklingOutput","timezone","_","map","output","dim","newOutput","cloneDeep","isAnIntervalWithoutFinish","value","type","to","values","time","from","tz","todayTime","grain","format","add","months"],"mappings":";;AAAA;;AACA;;AACA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,UAAU;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAAV,EAAwC;AAErD,SAAOC,gBAAEC,GAAF,CAAMH,cAAN,EAAuBI,MAAD,IAAY;AAErC,QAAIA,MAAM,CAACC,GAAP,KAAe,MAAnB,EAA2B;AACvB,aAAOD,MAAP;AACH;;AACD,UAAME,SAAS,GAAGJ,gBAAEK,SAAF,CAAYH,MAAZ,CAAlB;;AACA,UAAMI,yBAAyB,GAAIJ,MAAM,CAACK,KAAP,CAAaC,IAAb,KAAsB,UAAtB,IAAoC,CAACN,MAAM,CAACK,KAAP,CAAaE,EAArF;;AACA,QAAIP,MAAM,CAACK,KAAP,CAAaC,IAAb,KAAsB,UAAtB,IAAoCF,yBAAxC,EAAmE;AAC/D,aAAOF,SAAS,CAACG,KAAjB;AACAH,MAAAA,SAAS,CAACG,KAAV,GAAkB;AAAEC,QAAAA,IAAI,EAAEN,MAAM,CAACK,KAAP,CAAaC,IAArB;AAA2BE,QAAAA,MAAM,EAAER,MAAM,CAACK,KAAP,CAAaG,MAAb,GAAsBR,MAAM,CAACK,KAAP,CAAaG,MAAnC,GAA4C;AAA/E,OAAlB;AACA,YAAMC,IAAI,GAAGL,yBAAyB,GAAG,qBAAOJ,MAAM,CAACK,KAAP,CAAaK,IAAb,CAAkBL,KAAzB,EAAgCM,EAAhC,CAAmCd,QAAnC,CAAH,GAAkD,qBAAOG,MAAM,CAACK,KAAP,CAAaA,KAApB,EAA2BM,EAA3B,CAA8Bd,QAA9B,CAAxF;AACA,YAAMe,SAAS,GAAG,uBAASD,EAAT,CAAYd,QAAZ,CAAlB;AACA,YAAMgB,KAAK,GAAGT,yBAAyB,GAAGJ,MAAM,CAACK,KAAP,CAAaK,IAAb,CAAkBG,KAArB,GAA6Bb,MAAM,CAACK,KAAP,CAAaQ,KAAjF;AACAX,MAAAA,SAAS,CAACG,KAAV,CAAgBK,IAAhB,GAAuB;AACnBL,QAAAA,KAAK,EAAEI,IAAI,CAACK,MAAL,EADY;AAEnBD,QAAAA;AAFmB,OAAvB;;AAIA,cAAQA,KAAR;AACI,aAAK,QAAL;AACA,aAAK,QAAL;AACA,aAAK,MAAL;AACA,aAAK,KAAL;AACA,aAAK,MAAL;AACA,aAAK,MAAL;AACIX,UAAAA,SAAS,CAACG,KAAV,CAAgBE,EAAhB,GAAqB;AACjBF,YAAAA,KAAK,EAAED,yBAAyB,GAAGK,IAAI,CAACM,GAAL,CAAUH,SAAS,CAACC,KAAD,CAAT,KAAqBJ,IAAI,CAACI,KAAD,CAAJ,EAA/B,EAA+CA,KAAK,GAAG,GAAvD,EAA4DC,MAA5D,EAAH,GAA0EL,IAAI,CAACM,GAAL,CAAS,CAAT,EAAYF,KAAK,GAAG,GAApB,EAAyBC,MAAzB,EADzF;AAEjBD,YAAAA;AAFiB,WAArB;AAIA;;AACJ,aAAK,OAAL;AACI;;AACJ,aAAK,SAAL;AACIX,UAAAA,SAAS,CAACG,KAAV,CAAgBE,EAAhB,GAAqB;AACjBF,YAAAA,KAAK,EAAED,yBAAyB,GAAGK,IAAI,CAACM,GAAL,CAASH,SAAS,CAACI,MAAV,KAAqBP,IAAI,CAACO,MAAL,EAA9B,EAA6CH,KAAK,GAAG,GAArD,EAA0DC,MAA1D,EAAH,GAAwEL,IAAI,CAACM,GAAL,CAAS,CAAT,EAAY,QAAZ,EAAsBD,MAAtB,EADvF;AAEjBD,YAAAA;AAFiB,WAArB;AAIA;AAnBR;AAqBH;;AACD,WAAOX,SAAP;AACH,GAxCM,CAAP;AAyCH,CA3CD","sourcesContent":["import _ from 'lodash';\nimport Moment from 'moment';\nimport MomentTimezone from 'moment-timezone';\n\nmodule.exports = function ({ ducklingOutput, timezone }) {\n\n    return _.map(ducklingOutput, (output) => {\n\n        if (output.dim !== 'time') {\n            return output;\n        }\n        const newOutput = _.cloneDeep(output);\n        const isAnIntervalWithoutFinish = (output.value.type === 'interval' && !output.value.to);\n        if (output.value.type !== 'interval' || isAnIntervalWithoutFinish) {\n            delete newOutput.value;\n            newOutput.value = { type: output.value.type, values: output.value.values ? output.value.values : [] };\n            const time = isAnIntervalWithoutFinish ? Moment(output.value.from.value).tz(timezone) : Moment(output.value.value).tz(timezone);\n            const todayTime = Moment().tz(timezone);\n            const grain = isAnIntervalWithoutFinish ? output.value.from.grain : output.value.grain;\n            newOutput.value.from = {\n                value: time.format(),\n                grain\n            };\n            switch (grain) {\n                case 'second':\n                case 'minute':\n                case 'hour':\n                case 'day':\n                case 'week':\n                case 'year':\n                    newOutput.value.to = {\n                        value: isAnIntervalWithoutFinish ? time.add((todayTime[grain]() - time[grain]()), grain + 's').format() : time.add(1, grain + 's').format(),\n                        grain\n                    };\n                    break;\n                case 'month':\n                    break;\n                case 'quarter':\n                    newOutput.value.to = {\n                        value: isAnIntervalWithoutFinish ? time.add(todayTime.months() - time.months(), grain + 's').format() : time.add(3, 'months').format(),\n                        grain\n                    };\n                    break;\n            }\n        }\n        return newOutput;\n    });\n};\n"],"file":"duckling.convert-interval.service.js"}