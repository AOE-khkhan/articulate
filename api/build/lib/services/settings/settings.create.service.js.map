{"version":3,"sources":["../../../../server/lib/services/settings/settings.create.service.js"],"names":["module","exports","data","returnModel","redis","server","app","SettingsModel","factory","MODEL_SETTINGS","createInstance","allProperties","error"],"mappings":";;AAAA;;AACA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,gBAAgB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,WAAW,GAAG;AAAtB,CAAhB,EAA+C;AAAA,QAEpDC,KAFoD,GAE1C,KAAKC,MAAL,CAAYC,GAF8B,CAEpDF,KAFoD;AAG5D,QAAMG,aAAa,GAAG,MAAMH,KAAK,CAACI,OAAN,CAAcC,yBAAd,CAA5B;;AACA,MAAI;AACA,UAAMF,aAAa,CAACG,cAAd,CAA6B;AAAER,MAAAA;AAAF,KAA7B,CAAN;AACA,WAAOC,WAAW,GAAGI,aAAH,GAAmBA,aAAa,CAACI,aAAd,EAArC;AACH,GAHD,CAIA,OAAOC,KAAP,EAAc;AACV,UAAM,oBAAkB;AAAEA,MAAAA;AAAF,KAAlB,CAAN;AACH;AACJ,CAXD","sourcesContent":["import { MODEL_SETTINGS } from '../../../util/constants';\nimport RedisErrorHandler from '../../errors/redis.error-handler';\n\nmodule.exports = async function ({ data, returnModel = false }) {\n\n    const { redis } = this.server.app;\n    const SettingsModel = await redis.factory(MODEL_SETTINGS);\n    try {\n        await SettingsModel.createInstance({ data });\n        return returnModel ? SettingsModel : SettingsModel.allProperties();\n    }\n    catch (error) {\n        throw RedisErrorHandler({ error });\n    }\n};\n"],"file":"settings.create.service.js"}