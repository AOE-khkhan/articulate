{"version":3,"sources":["../../../../server/lib/services/settings/settings.bulk-update-settings.service.js"],"names":["module","exports","settingsData","redis","server","app","services","settingsService","Promise","all","_","map","value","name","Model","factory","MODEL_SETTINGS","findByName","returnModel","inDb","updateInstance","data","createInstance","findAll","error"],"mappings":";;AAAA;;AACA;;AACA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,gBAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAAkC;AAAA,QAEvCC,KAFuC,GAE7B,KAAKC,MAAL,CAAYC,GAFiB,CAEvCF,KAFuC;;AAAA,eAGnB,MAAM,KAAKC,MAAL,CAAYE,QAAZ,EAHa;AAAA,QAGvCC,eAHuC,QAGvCA,eAHuC;;AAI/C,MAAI;AACA,UAAMC,OAAO,CAACC,GAAR,CAAYC,gBAAEC,GAAF,CAAMT,YAAN,EAAoB,OAAOU,KAAP,EAAcC,IAAd,KAAuB;AAEzD,YAAMC,KAAK,GAAG,MAAMX,KAAK,CAACY,OAAN,CAAcC,yBAAd,CAApB;AACA,YAAMF,KAAK,CAACG,UAAN,CAAiB;AAAEJ,QAAAA,IAAF;AAAQK,QAAAA,WAAW,EAAE;AAArB,OAAjB,CAAN;;AACA,UAAIJ,KAAK,CAACK,IAAV,EAAgB;AACZ,cAAML,KAAK,CAACM,cAAN,CAAqB;AAAEC,UAAAA,IAAI,EAAE;AAAET,YAAAA;AAAF;AAAR,SAArB,CAAN;AACH,OAFD,MAGK;AACD,cAAME,KAAK,CAACQ,cAAN,CAAqB;AAAED,UAAAA,IAAI,EAAE;AAAER,YAAAA,IAAF;AAAQD,YAAAA;AAAR;AAAR,SAArB,CAAN;AACH;AACJ,KAViB,CAAZ,CAAN;AAYA,WAAO,MAAML,eAAe,CAACgB,OAAhB,EAAb;AACH,GAdD,CAeA,OAAOC,KAAP,EAAc;AACV,UAAM,oBAAkB;AAAEA,MAAAA;AAAF,KAAlB,CAAN;AACH;AACJ,CAtBD","sourcesContent":["import _ from 'lodash';\nimport { MODEL_SETTINGS } from '../../../util/constants';\nimport RedisErrorHandler from '../../errors/redis.error-handler';\n\nmodule.exports = async function ({ settingsData }) {\n\n    const { redis } = this.server.app;\n    const { settingsService } = await this.server.services();\n    try {\n        await Promise.all(_.map(settingsData, async (value, name) => {\n\n            const Model = await redis.factory(MODEL_SETTINGS);\n            await Model.findByName({ name, returnModel: true });\n            if (Model.inDb) {\n                await Model.updateInstance({ data: { value } });\n            }\n            else {\n                await Model.createInstance({ data: { name, value } });\n            }\n        }));\n\n        return await settingsService.findAll();\n    }\n    catch (error) {\n        throw RedisErrorHandler({ error });\n    }\n};\n\n\n"],"file":"settings.bulk-update-settings.service.js"}