{"version":3,"sources":["../../../../server/lib/services/frame/frame.update.service.js"],"names":["module","exports","id","data","returnModel","redis","server","app","FrameModel","factory","MODEL_FRAME","updateInstance","allProperties","error"],"mappings":";;AAAA;;AACA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,gBAAgB;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,IAAN;AAAYC,EAAAA,WAAW,GAAG;AAA1B,CAAhB,EAAmD;AAAA,QAExDC,KAFwD,GAE9C,KAAKC,MAAL,CAAYC,GAFkC,CAExDF,KAFwD;;AAIhE,MAAI;AACA,UAAMG,UAAU,GAAG,MAAMH,KAAK,CAACI,OAAN,CAAcC,sBAAd,EAA2BR,EAA3B,CAAzB;AAEA,UAAMM,UAAU,CAACG,cAAX,CAA0B;AAAER,MAAAA;AAAF,KAA1B,CAAN;AACA,WAAOC,WAAW,GAAGI,UAAH,GAAgBA,UAAU,CAACI,aAAX,EAAlC;AACH,GALD,CAMA,OAAOC,KAAP,EAAc;AACV,UAAM,oBAAkB;AAAEA,MAAAA;AAAF,KAAlB,CAAN;AACH;AACJ,CAbD","sourcesContent":["import { MODEL_FRAME } from '../../../util/constants';\nimport RedisErrorHandler from '../../errors/redis.error-handler';\n\nmodule.exports = async function ({ id, data, returnModel = false }) {\n\n    const { redis } = this.server.app;\n\n    try {\n        const FrameModel = await redis.factory(MODEL_FRAME, id);\n\n        await FrameModel.updateInstance({ data });\n        return returnModel ? FrameModel : FrameModel.allProperties();\n    }\n    catch (error) {\n        throw RedisErrorHandler({ error });\n    }\n};\n"],"file":"frame.update.service.js"}