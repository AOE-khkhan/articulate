{"version":3,"sources":["../../../../server/lib/services/post-format/post-format.remove.service.js"],"names":["module","exports","id","redis","server","app","PostFormatModel","factory","MODEL_POST_FORMAT","removeInstance","error","message"],"mappings":";;AAAA;;AACA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,gBAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAAwB;AAAA,QAE7BC,KAF6B,GAEnB,KAAKC,MAAL,CAAYC,GAFO,CAE7BF,KAF6B;;AAGrC,MAAI;AACA,UAAMG,eAAe,GAAG,MAAMH,KAAK,CAACI,OAAN,CAAcC,4BAAd,EAAiCN,EAAjC,CAA9B;AACA,WAAOI,eAAe,CAACG,cAAhB,CAA+B;AAAEP,MAAAA;AAAF,KAA/B,CAAP;AACH,GAHD,CAIA,OAAOQ,KAAP,EAAc;AACV,UAAM,oBAAkB;AAAEA,MAAAA,KAAF;AAASC,MAAAA,OAAO,EAAG,GAAEH,4BAAkB,QAAON,EAAG;AAAjD,KAAlB,CAAN;AACH;AAEJ,CAXD","sourcesContent":["import { MODEL_POST_FORMAT } from '../../../util/constants';\nimport RedisErrorHandler from '../../errors/redis.error-handler';\n\nmodule.exports = async function ({ id }) {\n\n    const { redis } = this.server.app;\n    try {\n        const PostFormatModel = await redis.factory(MODEL_POST_FORMAT, id);\n        return PostFormatModel.removeInstance({ id });\n    }\n    catch (error) {\n        throw RedisErrorHandler({ error, message: `${MODEL_POST_FORMAT} id=[${id}]` });\n    }\n\n};\n"],"file":"post-format.remove.service.js"}