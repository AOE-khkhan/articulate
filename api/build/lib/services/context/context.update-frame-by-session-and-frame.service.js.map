{"version":3,"sources":["../../../../server/lib/services/context/context.update-frame-by-session-and-frame.service.js"],"names":["module","exports","sessionId","frameId","frameData","returnModel","server","services","contextService","frameService","Frame","findFrameBySessionAndFrame","inDb","update","id","data","Promise","reject","NotFoundErrorHandler","model","MODEL_FRAME","error"],"mappings":";;AAAA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,gBAAgB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA,SAAtB;AAAiCC,EAAAA,WAAW,GAAG;AAA/C,CAAhB,EAAwE;AAAA,eAKjF,MAAM,KAAKC,MAAL,CAAYC,QAAZ,EAL2E;AAAA,QAGjFC,cAHiF,QAGjFA,cAHiF;AAAA,QAIjFC,YAJiF,QAIjFA,YAJiF;;AAOrF,MAAI;AACA,UAAMC,KAAK,GAAG,MAAMF,cAAc,CAACG,0BAAf,CAA0C;AAAET,MAAAA,SAAF;AAAaC,MAAAA,OAAb;AAAsBE,MAAAA,WAAW,EAAE;AAAnC,KAA1C,CAApB;;AACA,QAAIK,KAAK,CAACE,IAAV,EAAgB;AACZ,aAAO,MAAMH,YAAY,CAACI,MAAb,CAAoB;AAAEC,QAAAA,EAAE,EAAEX,OAAN;AAAeY,QAAAA,IAAI,EAAEX,SAArB;AAAgCC,QAAAA;AAAhC,OAApB,CAAb;AACH;;AACD,WAAOW,OAAO,CAACC,MAAR,CAAeC,oBAAoB,CAAC;AAAEC,MAAAA,KAAK,EAAEC,WAAT;AAAsBN,MAAAA,EAAE,EAAEX;AAA1B,KAAD,CAAnC,CAAP;AAEH,GAPD,CAQA,OAAOkB,KAAP,EAAc;AACV,UAAM,oBAAkB;AAAEA,MAAAA;AAAF,KAAlB,CAAN;AACH;AACJ,CAlBD","sourcesContent":["import RedisErrorHandler from '../../errors/redis.error-handler';\n\nmodule.exports = async function ({ sessionId, frameId, frameData, returnModel = false }) {\n\n    const {\n        contextService,\n        frameService\n    } = await this.server.services();\n\n    try {\n        const Frame = await contextService.findFrameBySessionAndFrame({ sessionId, frameId, returnModel: true });\n        if (Frame.inDb) {\n            return await frameService.update({ id: frameId, data: frameData, returnModel });\n        }\n        return Promise.reject(NotFoundErrorHandler({ model: MODEL_FRAME, id: frameId }));\n\n    }\n    catch (error) {\n        throw RedisErrorHandler({ error });\n    }\n};\n"],"file":"context.update-frame-by-session-and-frame.service.js"}