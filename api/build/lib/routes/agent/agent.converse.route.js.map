{"version":3,"sources":["../../../../server/lib/routes/agent/agent.converse.route.js"],"names":["module","exports","method","path","ROUTE_AGENT","PARAM_AGENT_ID","ROUTE_CONVERSE","options","tags","validate","AgentValidator","converse","handler","request","services","agentService","agentId","params","payload","text","PARAM_TEXT","timezone","PARAM_TIMEZONE","sessionId","PARAM_SESSION","rest","debug","query","PARAM_DEBUG","id","additionalKeys","requestId","Date","now","message","statusCode","Boom"],"mappings":";;AAAA;;AACA;;AASA;;;;;;;;AAEA;AAEAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,MAAM,EAAE,MADK;AAEbC,EAAAA,IAAI,EAAG,IAAGC,sBAAY,KAAIC,yBAAe,KAAIC,yBAAe,EAF/C;AAGbC,EAAAA,OAAO,EAAE;AACLC,IAAAA,IAAI,EAAE,CAAC,KAAD,CADD;AAELC,IAAAA,QAAQ,EAAEC,eAAeC,QAFpB;AAGLC,IAAAA,OAAO,EAAE,MAAOC,OAAP,IAAmB;AAAA,mBAEC,MAAMA,OAAO,CAACC,QAAR,EAFP;AAAA,YAEhBC,YAFgB,QAEhBA,YAFgB;;AAAA,YAIFC,OAJE,GAKpBH,OAAO,CAACI,MALY,CAInBZ,yBAJmB;;AAAA,+BAYpBQ,OAAO,CAACK,OAZY;AAAA,YAQNC,IARM,oBAQnBC,qBARmB;AAAA,YASFC,QATE,oBASnBC,yBATmB;AAAA,YAUHC,SAVG,oBAUnBC,wBAVmB;AAAA,YAWjBC,IAXiB,+CAQnBL,qBARmB,EASnBE,yBATmB,EAUnBE,wBAVmB;;AAAA,YAeLE,KAfK,GAgBpBb,OAAO,CAACc,KAhBY,CAenBC,sBAfmB;;AAkBxB,UAAI;AACA,eAAO,MAAMb,YAAY,CAACJ,QAAb,CAAsB;AAAEkB,UAAAA,EAAE,EAAEb,OAAN;AAAeG,UAAAA,IAAf;AAAqBE,UAAAA,QAArB;AAA+BE,UAAAA,SAA/B;AAA0CG,UAAAA,KAA1C;AAAiDI,UAAAA,cAAc,EAAEL,IAAjE;AAAuEM,UAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL;AAAlF,SAAtB,CAAb;AACH,OAFD,CAGA,cAAgC;AAAA,YAAvBC,OAAuB,SAAvBA,OAAuB;AAAA,YAAdC,UAAc,SAAdA,UAAc;AAC5B,eAAO,IAAIC,aAAJ,CAASF,OAAT,EAAkB;AAAEC,UAAAA;AAAF,SAAlB,CAAP;AACH;AACJ;AA3BI;AAHI,CAAjB","sourcesContent":["import Boom from 'boom';\nimport {\n    PARAM_AGENT_ID,\n    PARAM_DEBUG,\n    PARAM_SESSION,\n    PARAM_TEXT,\n    PARAM_TIMEZONE,\n    ROUTE_AGENT,\n    ROUTE_CONVERSE\n} from '../../../util/constants';\nimport AgentValidator from '../../validators/agent.validator';\n\n//const logger = require('../../../server/util/logger')({ name: `route:agent:create` });\n\nmodule.exports = {\n    method: 'post',\n    path: `/${ROUTE_AGENT}/{${PARAM_AGENT_ID}}/${ROUTE_CONVERSE}`,\n    options: {\n        tags: ['api'],\n        validate: AgentValidator.converse,\n        handler: async (request) => {\n\n            const { agentService } = await request.services();\n            const {\n                [PARAM_AGENT_ID]: agentId\n            } = request.params;\n\n            const {\n                [PARAM_TEXT]: text,\n                [PARAM_TIMEZONE]: timezone,\n                [PARAM_SESSION]: sessionId,\n                ...rest\n            } = request.payload;\n\n            const {\n                [PARAM_DEBUG]: debug\n            } = request.query;\n\n            try {\n                return await agentService.converse({ id: agentId, text, timezone, sessionId, debug, additionalKeys: rest, requestId: Date.now() });\n            }\n            catch ({ message, statusCode }) {\n                return new Boom(message, { statusCode });\n            }\n        }\n    }\n};\n"],"file":"agent.converse.route.js"}