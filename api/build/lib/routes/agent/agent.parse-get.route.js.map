{"version":3,"sources":["../../../../server/lib/routes/agent/agent.parse-get.route.js"],"names":["module","exports","method","path","ROUTE_AGENT","PARAM_AGENT_ID","ROUTE_PARSE","options","tags","validate","AgentValidator","parseGet","handler","request","services","agentService","agentId","params","query","text","timezone","parse","id","message","statusCode","Boom"],"mappings":";;AAAA;;AACA;;AAKA;;;;AAEA;AAEAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,MAAM,EAAE,KADK;AAEbC,EAAAA,IAAI,EAAG,IAAGC,sBAAY,KAAIC,yBAAe,KAAIC,sBAAY,EAF5C;AAGbC,EAAAA,OAAO,EAAE;AACLC,IAAAA,IAAI,EAAE,CAAC,KAAD,CADD;AAELC,IAAAA,QAAQ,EAAEC,eAAeC,QAFpB;AAGLC,IAAAA,OAAO,EAAE,MAAOC,OAAP,IAAmB;AAAA,mBAEC,MAAMA,OAAO,CAACC,QAAR,EAFP;AAAA,YAEhBC,YAFgB,QAEhBA,YAFgB;;AAAA,YAIFC,OAJE,GAKpBH,OAAO,CAACI,MALY,CAInBZ,yBAJmB;AAAA,6BASpBQ,OAAO,CAACK,KATY;AAAA,YAOpBC,IAPoB,kBAOpBA,IAPoB;AAAA,YAQpBC,QARoB,kBAQpBA,QARoB;;AAUxB,UAAI;AACA,eAAO,MAAML,YAAY,CAACM,KAAb,CAAmB;AAAEC,UAAAA,EAAE,EAAEN,OAAN;AAAeG,UAAAA,IAAf;AAAqBC,UAAAA;AAArB,SAAnB,CAAb;AACH,OAFD,CAGA,cAAgC;AAAA,YAAvBG,OAAuB,SAAvBA,OAAuB;AAAA,YAAdC,UAAc,SAAdA,UAAc;AAC5B,eAAO,IAAIC,aAAJ,CAASF,OAAT,EAAkB;AAAEC,UAAAA;AAAF,SAAlB,CAAP;AACH;AACJ;AAnBI;AAHI,CAAjB","sourcesContent":["import Boom from 'boom';\nimport {\n    PARAM_AGENT_ID,\n    ROUTE_AGENT,\n    ROUTE_PARSE\n} from '../../../util/constants';\nimport AgentValidator from '../../validators/agent.validator';\n\n//const logger = require('../../../server/util/logger')({ name: `route:agent:create` });\n\nmodule.exports = {\n    method: 'get',\n    path: `/${ROUTE_AGENT}/{${PARAM_AGENT_ID}}/${ROUTE_PARSE}`,\n    options: {\n        tags: ['api'],\n        validate: AgentValidator.parseGet,\n        handler: async (request) => {\n\n            const { agentService } = await request.services();\n            const {\n                [PARAM_AGENT_ID]: agentId\n            } = request.params;\n            const {\n                text,\n                timezone\n            } = request.query;\n            try {\n                return await agentService.parse({ id: agentId, text, timezone });\n            }\n            catch ({ message, statusCode }) {\n                return new Boom(message, { statusCode });\n            }\n        }\n    }\n};\n"],"file":"agent.parse-get.route.js"}