{"version":3,"sources":["../../../../server/lib/routes/agent/agent.update-saying-in-category.route.js"],"names":["module","exports","method","path","ROUTE_AGENT","PARAM_AGENT_ID","ROUTE_CATEGORY","PARAM_CATEGORY_ID","ROUTE_SAYING","PARAM_SAYING_ID","options","tags","validate","AgentValidator","updateSayingInCategory","handler","request","services","agentService","params","agentId","categoryId","sayingId","upsertSayingInCategory","id","sayingData","payload","message","statusCode","Boom"],"mappings":";;AAAA;;AACA;;AAQA;;;;AACA;AAEAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,MAAM,EAAE,CAAC,KAAD,CADK;AAEbC,EAAAA,IAAI,EAAG,IAAGC,sBAAY,KAAIC,yBAAe,KAAIC,yBAAe,KAAIC,4BAAkB,KAAIC,uBAAa,KAAIC,0BAAgB,GAF1G;AAGbC,EAAAA,OAAO,EAAE;AACLC,IAAAA,IAAI,EAAE,CAAC,KAAD,CADD;AAELC,IAAAA,QAAQ,EAAEC,eAAeC,sBAFpB;AAGLC,IAAAA,OAAO,EAAE,MAAOC,OAAP,IAAmB;AAAA,mBAEC,MAAMA,OAAO,CAACC,QAAR,EAFP;AAAA,YAEhBC,YAFgB,QAEhBA,YAFgB;;AAAA,8BAOpBF,OAAO,CAACG,MAPY;AAAA,YAIFC,OAJE,mBAInBf,yBAJmB;AAAA,YAKCgB,UALD,mBAKnBd,4BALmB;AAAA,YAMDe,QANC,mBAMnBb,0BANmB;;AAQxB,UAAI;AACA,eAAO,MAAMS,YAAY,CAACK,sBAAb,CAAoC;AAAEC,UAAAA,EAAE,EAAEJ,OAAN;AAAeC,UAAAA,UAAf;AAA2BC,UAAAA,QAA3B;AAAqCG,UAAAA,UAAU,EAAET,OAAO,CAACU;AAAzD,SAApC,CAAb;AACH,OAFD,CAGA,cAAgC;AAAA,YAAvBC,OAAuB,SAAvBA,OAAuB;AAAA,YAAdC,UAAc,SAAdA,UAAc;AAC5B,eAAO,IAAIC,aAAJ,CAASF,OAAT,EAAkB;AAAEC,UAAAA;AAAF,SAAlB,CAAP;AACH;AACJ;AAjBI;AAHI,CAAjB","sourcesContent":["import Boom from 'boom';\nimport {\n    PARAM_AGENT_ID,\n    PARAM_CATEGORY_ID,\n    PARAM_SAYING_ID,\n    ROUTE_AGENT,\n    ROUTE_CATEGORY,\n    ROUTE_SAYING\n} from '../../../util/constants';\nimport AgentValidator from '../../validators/agent.validator';\n//const logger = require('../../../server/util/logger')({ name: `route:agent:create-webhook` });\n\nmodule.exports = {\n    method: ['put'],\n    path: `/${ROUTE_AGENT}/{${PARAM_AGENT_ID}}/${ROUTE_CATEGORY}/{${PARAM_CATEGORY_ID}}/${ROUTE_SAYING}/{${PARAM_SAYING_ID}}`,\n    options: {\n        tags: ['api'],\n        validate: AgentValidator.updateSayingInCategory,\n        handler: async (request) => {\n\n            const { agentService } = await request.services();\n            const {\n                [PARAM_AGENT_ID]: agentId,\n                [PARAM_CATEGORY_ID]: categoryId,\n                [PARAM_SAYING_ID]: sayingId\n            } = request.params;\n            try {\n                return await agentService.upsertSayingInCategory({ id: agentId, categoryId, sayingId, sayingData: request.payload });\n            }\n            catch ({ message, statusCode }) {\n                return new Boom(message, { statusCode });\n            }\n        }\n    }\n};\n"],"file":"agent.update-saying-in-category.route.js"}