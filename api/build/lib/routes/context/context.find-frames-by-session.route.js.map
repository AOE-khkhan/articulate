{"version":3,"sources":["../../../../server/lib/routes/context/context.find-frames-by-session.route.js"],"names":["module","exports","method","path","ROUTE_CONTEXT","PARAM_SESSION","ROUTE_FRAME","options","tags","validate","ContextValidator","findFramesBySession","handler","request","services","contextService","sessionId","params","query","skip","limit","direction","field","message","statusCode","Boom"],"mappings":";;AAAA;;AACA;;AAKA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,MAAM,EAAE,KADK;AAEbC,EAAAA,IAAI,EAAG,IAAGC,wBAAc,KAAIC,wBAAc,KAAIC,sBAAY,EAF7C;AAGbC,EAAAA,OAAO,EAAE;AACLC,IAAAA,IAAI,EAAE,CAAC,KAAD,CADD;AAELC,IAAAA,QAAQ,EAAEC,iBAAiBC,mBAFtB;AAGLC,IAAAA,OAAO,EAAE,MAAOC,OAAP,IAAmB;AAAA,mBAEG,MAAMA,OAAO,CAACC,QAAR,EAFT;AAAA,YAEhBC,cAFgB,QAEhBA,cAFgB;;AAAA,YAIHC,SAJG,GAKpBH,OAAO,CAACI,MALY,CAInBZ,wBAJmB;AAAA,6BAWpBQ,OAAO,CAACK,KAXY;AAAA,YAOpBC,IAPoB,kBAOpBA,IAPoB;AAAA,YAQpBC,KARoB,kBAQpBA,KARoB;AAAA,YASpBC,SAToB,kBASpBA,SAToB;AAAA,YAUpBC,KAVoB,kBAUpBA,KAVoB;;AAYxB,UAAI;AACA,eAAO,MAAMP,cAAc,CAACJ,mBAAf,CAAmC;AAAEK,UAAAA,SAAF;AAAaG,UAAAA,IAAb;AAAmBC,UAAAA,KAAnB;AAA0BC,UAAAA,SAA1B;AAAqCC,UAAAA;AAArC,SAAnC,CAAb;AACH,OAFD,CAGA,cAAgC;AAAA,YAAvBC,OAAuB,SAAvBA,OAAuB;AAAA,YAAdC,UAAc,SAAdA,UAAc;AAE5B,eAAO,IAAIC,aAAJ,CAASF,OAAT,EAAkB;AAAEC,UAAAA;AAAF,SAAlB,CAAP;AACH;AACJ;AAtBI;AAHI,CAAjB","sourcesContent":["import Boom from 'boom';\nimport {\n    PARAM_SESSION,\n    ROUTE_CONTEXT,\n    ROUTE_FRAME\n} from '../../../util/constants';\nimport ContextValidator from '../../validators/context.validator';\n\nmodule.exports = {\n    method: 'get',\n    path: `/${ROUTE_CONTEXT}/{${PARAM_SESSION}}/${ROUTE_FRAME}`,\n    options: {\n        tags: ['api'],\n        validate: ContextValidator.findFramesBySession,\n        handler: async (request) => {\n\n            const { contextService } = await request.services();\n            const {\n                [PARAM_SESSION]: sessionId\n            } = request.params;\n            const {\n                skip,\n                limit,\n                direction,\n                field\n            } = request.query;\n            try {\n                return await contextService.findFramesBySession({ sessionId, skip, limit, direction, field });\n            }\n            catch ({ message, statusCode }) {\n\n                return new Boom(message, { statusCode });\n            }\n        }\n    }\n};\n\n"],"file":"context.find-frames-by-session.route.js"}