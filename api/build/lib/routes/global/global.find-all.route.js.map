{"version":3,"sources":["../../../../server/lib/routes/global/global.find-all.route.js"],"names":["module","exports","ROUTE","method","path","options","tags","validate","GlobalValidator","findAll","handler","request","services","globalService","query","skip","PARAM_SKIP","limit","PARAM_LIMIT","direction","PARAM_DIRECTION","field","PARAM_FIELD","filter","PARAM_FILTER","model","ROUTE_TO_MODEL","message","statusCode","Boom"],"mappings":";;AAAA;;AACA;;AAQA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAE5B,SAAO;AACHC,IAAAA,MAAM,EAAE,KADL;AAEHC,IAAAA,IAAI,EAAG,IAAGF,KAAM,EAFb;AAGHG,IAAAA,OAAO,EAAE;AACLC,MAAAA,IAAI,EAAE,CAAC,KAAD,CADD;AAELC,MAAAA,QAAQ,EAAEC,gBAAgBC,OAFrB;AAGLC,MAAAA,OAAO,EAAE,MAAOC,OAAP,IAAmB;AAAA,qBAEE,MAAMA,OAAO,CAACC,QAAR,EAFR;AAAA,cAEhBC,aAFgB,QAEhBA,aAFgB;;AAAA,+BASpBF,OAAO,CAACG,KATY;AAAA,cAINC,IAJM,kBAInBC,qBAJmB;AAAA,cAKLC,KALK,kBAKnBC,sBALmB;AAAA,cAMDC,SANC,kBAMnBC,0BANmB;AAAA,cAOLC,KAPK,kBAOnBC,sBAPmB;AAAA,cAQJC,MARI,kBAQnBC,uBARmB;;AAUxB,YAAI;AACA,iBAAO,MAAMX,aAAa,CAACJ,OAAd,CAAsB;AAAEM,YAAAA,IAAF;AAAQE,YAAAA,KAAR;AAAeE,YAAAA,SAAf;AAA0BE,YAAAA,KAA1B;AAAiCI,YAAAA,KAAK,EAAEC,0BAAexB,KAAf,CAAxC;AAA+DqB,YAAAA;AAA/D,WAAtB,CAAb;AACH,SAFD,CAGA,cAAgC;AAAA,cAAvBI,OAAuB,SAAvBA,OAAuB;AAAA,cAAdC,UAAc,SAAdA,UAAc;AAE5B,iBAAO,IAAIC,aAAJ,CAASF,OAAT,EAAkB;AAAEC,YAAAA;AAAF,WAAlB,CAAP;AACH;AACJ;AApBI;AAHN,GAAP;AA0BH,CA5BD","sourcesContent":["import Boom from 'boom';\nimport {\n    PARAM_DIRECTION,\n    PARAM_FIELD,\n    PARAM_FILTER,\n    PARAM_LIMIT,\n    PARAM_SKIP,\n    ROUTE_TO_MODEL\n} from '../../../util/constants';\nimport GlobalValidator from '../../validators/global.validator';\n\nmodule.exports = ({ ROUTE }) => {\n\n    return {\n        method: 'get',\n        path: `/${ROUTE}`,\n        options: {\n            tags: ['api'],\n            validate: GlobalValidator.findAll,\n            handler: async (request) => {\n\n                const { globalService } = await request.services();\n                const {\n                    [PARAM_SKIP]: skip,\n                    [PARAM_LIMIT]: limit,\n                    [PARAM_DIRECTION]: direction,\n                    [PARAM_FIELD]: field,\n                    [PARAM_FILTER]: filter\n                } = request.query;\n                try {\n                    return await globalService.findAll({ skip, limit, direction, field, model: ROUTE_TO_MODEL[ROUTE], filter });\n                }\n                catch ({ message, statusCode }) {\n\n                    return new Boom(message, { statusCode });\n                }\n            }\n        }\n    };\n};\n"],"file":"global.find-all.route.js"}