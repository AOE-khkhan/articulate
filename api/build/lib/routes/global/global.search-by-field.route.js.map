{"version":3,"sources":["../../../../server/lib/routes/global/global.search-by-field.route.js"],"names":["module","exports","ROUTE","method","path","PARAM_SEARCH","PARAM_FIELD","PARAM_VALUE","options","tags","validate","GlobalValidator","searchByfield","handler","request","services","globalService","params","field","value","searchByField","model","ROUTE_TO_MODEL","message","statusCode","Boom"],"mappings":";;AAAA;;AACA;;AAMA;;;;AAEA;AAEAA,MAAM,CAACC,OAAP,GAAiB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAE5B,SAAO;AACHC,IAAAA,MAAM,EAAE,KADL;AAEHC,IAAAA,IAAI,EAAG,IAAGF,KAAM,IAAGG,uBAAa,KAAIC,sBAAY,MAAKC,sBAAY,GAF9D;AAGHC,IAAAA,OAAO,EAAE;AACLC,MAAAA,IAAI,EAAE,CAAC,KAAD,CADD;AAELC,MAAAA,QAAQ,EAAEC,gBAAgBC,aAFrB;AAILC,MAAAA,OAAO,EAAE,MAAOC,OAAP,IAAmB;AAAA,qBAEE,MAAMA,OAAO,CAACC,QAAR,EAFR;AAAA,cAEhBC,aAFgB,QAEhBA,aAFgB;;AAAA,gCAMpBF,OAAO,CAACG,MANY;AAAA,cAILC,KAJK,mBAInBZ,sBAJmB;AAAA,cAKLa,KALK,mBAKnBZ,sBALmB;;AAOxB,YAAI;AACA,iBAAO,MAAMS,aAAa,CAACI,aAAd,CAA4B;AAAEF,YAAAA,KAAF;AAASC,YAAAA,KAAT;AAAgBE,YAAAA,KAAK,EAAEC,0BAAepB,KAAf;AAAvB,WAA5B,CAAb;AACH,SAFD,CAGA,cAAgC;AAAA,cAAvBqB,OAAuB,SAAvBA,OAAuB;AAAA,cAAdC,UAAc,SAAdA,UAAc;AAE5B,iBAAO,IAAIC,aAAJ,CAASF,OAAT,EAAkB;AAAEC,YAAAA;AAAF,WAAlB,CAAP;AACH;AACJ;AAlBI;AAHN,GAAP;AAwBH,CA1BD","sourcesContent":["import Boom from 'boom';\nimport {\n    PARAM_FIELD,\n    PARAM_SEARCH,\n    PARAM_VALUE,\n    ROUTE_TO_MODEL\n} from '../../../util/constants';\nimport GlobalValidator from '../../validators/global.validator';\n\n//const logger = require('../../../server/util/logger')({ name: `route:global:search-by-field` });\n\nmodule.exports = ({ ROUTE }) => {\n\n    return {\n        method: 'get',\n        path: `/${ROUTE}/${PARAM_SEARCH}/{${PARAM_FIELD}}/{${PARAM_VALUE}}`,\n        options: {\n            tags: ['api'],\n            validate: GlobalValidator.searchByfield,\n\n            handler: async (request) => {\n\n                const { globalService } = await request.services();\n                const {\n                    [PARAM_FIELD]: field,\n                    [PARAM_VALUE]: value\n                } = request.params;\n                try {\n                    return await globalService.searchByField({ field, value, model: ROUTE_TO_MODEL[ROUTE] });\n                }\n                catch ({ message, statusCode }) {\n\n                    return new Boom(message, { statusCode });\n                }\n            }\n        }\n    };\n};\n"],"file":"global.search-by-field.route.js"}