{"version":3,"sources":["../../../server/lib/validators/global.validator.js"],"names":["AgentValidate","constructor","searchByfield","params","PARAM_FIELD","Joi","string","required","description","PARAM_VALUE","findAll","query","PARAM_SKIP","number","integer","optional","PARAM_LIMIT","PARAM_DIRECTION","allow","PARAM_FILTER","object","agentValidate","module","exports"],"mappings":";;AAAA;;AACA;;;;AASA,MAAMA,aAAN,CAAoB;AAChBC,EAAAA,WAAW,GAAG;AAEV,SAAKC,aAAL,GAAqB;AACjBC,MAAAA,MAAM,EAAE,CAAC,MAAM;AAEX,eAAO;AACH,WAACC,sBAAD,GAAeC,aAAIC,MAAJ,GAAaC,QAAb,GAAwBC,WAAxB,CAAoC,8EAApC,CADZ;AAEH,WAACC,sBAAD,GAAeJ,aAAIC,MAAJ,GAAaC,QAAb,GAAwBC,WAAxB,CAAoC,qBAApC;AAFZ,SAAP;AAIH,OANO;AADS,KAArB;AAUA,SAAKE,OAAL,GAAe;AACXC,MAAAA,KAAK,EAAE,CAAC,MAAM;AAEV,eAAO;AACH,WAACC,qBAAD,GAAcP,aACTQ,MADS,GAETC,OAFS,GAGTC,QAHS,GAITP,WAJS,CAIG,wCAJH,CADX;AAMH,WAACQ,sBAAD,GAAeX,aACVQ,MADU,GAEVC,OAFU,GAGVC,QAHU,GAIVP,WAJU,CAIE,2CAJF,CANZ;AAWH,WAACS,0BAAD,GAAmBZ,aACdC,MADc,GAEdS,QAFc,GAGdG,KAHc,CAGR,KAHQ,EAGD,MAHC,EAIdV,WAJc,CAIF,8BAJE,CAXhB;AAgBH,WAACJ,sBAAD,GAAeC,aACVC,MADU,GAEVS,QAFU,GAGVP,WAHU,CAGE,8BAHF,CAhBZ;AAoBH,WAACW,uBAAD,GAAgBd,aACXe,MADW,GAEXL,QAFW,GAGXP,WAHW,CAGC,uFAHD;AApBb,SAAP;AAyBH,OA3BM;AADI,KAAf;AA+BH;;AA5Ce;;AA+CpB,MAAMa,aAAa,GAAG,IAAIrB,aAAJ,EAAtB;AACAsB,MAAM,CAACC,OAAP,GAAiBF,aAAjB","sourcesContent":["import Joi from 'joi';\nimport {\n    PARAM_DIRECTION,\n    PARAM_FIELD,\n    PARAM_FILTER,\n    PARAM_LIMIT,\n    PARAM_SKIP,\n    PARAM_VALUE\n} from '../../util/constants';\n\nclass AgentValidate {\n    constructor() {\n\n        this.searchByfield = {\n            params: (() => {\n\n                return {\n                    [PARAM_FIELD]: Joi.string().required().description('Field name. Must be indexed. If unique then a single value will be returned.'),\n                    [PARAM_VALUE]: Joi.string().required().description('Value to search for')\n                };\n            })()\n        };\n\n        this.findAll = {\n            query: (() => {\n\n                return {\n                    [PARAM_SKIP]: Joi\n                        .number()\n                        .integer()\n                        .optional()\n                        .description('Number of resources to skip. Default=0'),\n                    [PARAM_LIMIT]: Joi\n                        .number()\n                        .integer()\n                        .optional()\n                        .description('Number of resources to return. Default=50'),\n                    [PARAM_DIRECTION]: Joi\n                        .string()\n                        .optional()\n                        .allow('ASC', 'DESC')\n                        .description('Sort direction. Default= ASC'),\n                    [PARAM_FIELD]: Joi\n                        .string()\n                        .optional()\n                        .description('Field used to do the sorting'),\n                    [PARAM_FILTER]: Joi\n                        .object()\n                        .optional()\n                        .description('Values to filter the the results (experimental). Arrays will be treated as OR values.')\n                };\n            })()\n        };\n\n    }\n}\n\nconst agentValidate = new AgentValidate();\nmodule.exports = agentValidate;\n"],"file":"global.validator.js"}