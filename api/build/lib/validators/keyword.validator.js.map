{"version":3,"sources":["../../../server/lib/validators/keyword.validator.js"],"names":["KeywordSchema","require","schema","ExampleSchema","ModifierSchema","ModifierSayingSchema","SayingKeywordSchema","KeywordValidate","constructor","updateById","params","PARAM_KEYWORD_ID","id","required","description","payload","keywordName","uiColor","regex","allow","type","valid","CONFIG_KEYWORD_TYPE_LEARNED","CONFIG_KEYWORD_TYPE_REGEX","optional","default","error","Error","examples","Joi","array","items","value","synonyms","modifiers","modifierName","action","valueSource","staticValue","sayings","userSays","keywords","start","end","keyword","keywordId","extractor","creationDate","modificationDate","keywordValidate","module","exports"],"mappings":"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","sourcesContent":["import Joi from 'joi';\nimport {\n    CONFIG_KEYWORD_TYPE_LEARNED,\n    CONFIG_KEYWORD_TYPE_REGEX,\n    PARAM_KEYWORD_ID\n} from '../../util/constants';\n\nconst KeywordSchema = require('../models/keyword.model').schema;\nconst ExampleSchema = require('../models/keyword-example.model').schema;\nconst ModifierSchema = require('../models/modifier.model').schema;\nconst ModifierSayingSchema = require('../models/modifier.saying.model').schema;\nconst SayingKeywordSchema = require('../models/saying.keyword.model').schema;\n\n\nclass KeywordValidate {\n    constructor() {\n\n\n\n        this.updateById = {\n            params: (() => {\n\n                return {\n                    [PARAM_KEYWORD_ID]: KeywordSchema.id.required().description('Id of the keyword')\n                };\n            })(),\n            payload: (() => {\n\n                return {\n                    keywordName: KeywordSchema.keywordName,\n                    uiColor: KeywordSchema.uiColor,\n                    regex: KeywordSchema.regex.allow('').allow(null),\n                    type: KeywordSchema.type\n                        .allow('')\n                        .allow(null)\n                        .valid(CONFIG_KEYWORD_TYPE_LEARNED, CONFIG_KEYWORD_TYPE_REGEX)\n                        .optional()\n                        .default(CONFIG_KEYWORD_TYPE_LEARNED)\n                        .error(new Error('Please provide valid keyword type among learned and regex')),\n                    examples: Joi.array().items({\n                        value: ExampleSchema.value.required(),\n                        synonyms: ExampleSchema.synonyms.required()\n                    }),\n                    modifiers: Joi.array().items({\n                        modifierName: ModifierSchema.modifierName.required(),\n                        action: ModifierSchema.action.required(),\n                        valueSource: ModifierSchema.valueSource.required(),\n                        staticValue: ModifierSchema.staticValue,\n                        sayings: Joi.array().items({\n                            userSays: ModifierSayingSchema.userSays.required(),\n                            keywords: Joi.array().items({\n                                start: SayingKeywordSchema.start.required(),\n                                end: SayingKeywordSchema.end.required(),\n                                value: SayingKeywordSchema.value.required(),\n                                keyword: SayingKeywordSchema.keyword.required(),\n                                keywordId: SayingKeywordSchema.keywordId.required(),\n                                extractor: SayingKeywordSchema.extractor\n                            })\n                        })\n                    }),\n                    creationDate: KeywordSchema.creationDate,\n                    modificationDate: KeywordSchema.modificationDate\n                };\n            })()\n        };\n\n    }\n}\n\nconst keywordValidate = new KeywordValidate();\nmodule.exports = keywordValidate;\n"],"file":"keyword.validator.js"}